package com.orange.goldgame.domain;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class GetPrizeExample {
    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table get_prize
     *
     * @ibatorgenerated Mon Jul 15 09:59:23 CST 2013
     */
    protected String orderByClause;

    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table get_prize
     *
     * @ibatorgenerated Mon Jul 15 09:59:23 CST 2013
     */
    protected List oredCriteria;

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table get_prize
     *
     * @ibatorgenerated Mon Jul 15 09:59:23 CST 2013
     */
    public GetPrizeExample() {
        oredCriteria = new ArrayList();
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table get_prize
     *
     * @ibatorgenerated Mon Jul 15 09:59:23 CST 2013
     */
    protected GetPrizeExample(GetPrizeExample example) {
        this.orderByClause = example.orderByClause;
        this.oredCriteria = example.oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table get_prize
     *
     * @ibatorgenerated Mon Jul 15 09:59:23 CST 2013
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table get_prize
     *
     * @ibatorgenerated Mon Jul 15 09:59:23 CST 2013
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table get_prize
     *
     * @ibatorgenerated Mon Jul 15 09:59:23 CST 2013
     */
    public List getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table get_prize
     *
     * @ibatorgenerated Mon Jul 15 09:59:23 CST 2013
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table get_prize
     *
     * @ibatorgenerated Mon Jul 15 09:59:23 CST 2013
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table get_prize
     *
     * @ibatorgenerated Mon Jul 15 09:59:23 CST 2013
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table get_prize
     *
     * @ibatorgenerated Mon Jul 15 09:59:23 CST 2013
     */
    public void clear() {
        oredCriteria.clear();
    }

    /**
     * This class was generated by Apache iBATIS ibator.
     * This class corresponds to the database table get_prize
     *
     * @ibatorgenerated Mon Jul 15 09:59:23 CST 2013
     */
    public static class Criteria {
        protected List criteriaWithoutValue;

        protected List criteriaWithSingleValue;

        protected List criteriaWithListValue;

        protected List criteriaWithBetweenValue;

        protected Criteria() {
            super();
            criteriaWithoutValue = new ArrayList();
            criteriaWithSingleValue = new ArrayList();
            criteriaWithListValue = new ArrayList();
            criteriaWithBetweenValue = new ArrayList();
        }

        public boolean isValid() {
            return criteriaWithoutValue.size() > 0
                || criteriaWithSingleValue.size() > 0
                || criteriaWithListValue.size() > 0
                || criteriaWithBetweenValue.size() > 0;
        }

        public List getCriteriaWithoutValue() {
            return criteriaWithoutValue;
        }

        public List getCriteriaWithSingleValue() {
            return criteriaWithSingleValue;
        }

        public List getCriteriaWithListValue() {
            return criteriaWithListValue;
        }

        public List getCriteriaWithBetweenValue() {
            return criteriaWithBetweenValue;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteriaWithoutValue.add(condition);
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("value", value);
            criteriaWithSingleValue.add(map);
        }

        protected void addCriterion(String condition, List values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("values", values);
            criteriaWithListValue.add(map);
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            List list = new ArrayList();
            list.add(value1);
            list.add(value2);
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("values", list);
            criteriaWithBetweenValue.add(map);
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("id =", value, "id");
            return this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("id <>", value, "id");
            return this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("id >", value, "id");
            return this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("id >=", value, "id");
            return this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("id <", value, "id");
            return this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("id <=", value, "id");
            return this;
        }

        public Criteria andIdIn(List values) {
            addCriterion("id in", values, "id");
            return this;
        }

        public Criteria andIdNotIn(List values) {
            addCriterion("id not in", values, "id");
            return this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("id between", value1, value2, "id");
            return this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("id not between", value1, value2, "id");
            return this;
        }

        public Criteria andPlayerIdIsNull() {
            addCriterion("player_id is null");
            return this;
        }

        public Criteria andPlayerIdIsNotNull() {
            addCriterion("player_id is not null");
            return this;
        }

        public Criteria andPlayerIdEqualTo(Integer value) {
            addCriterion("player_id =", value, "playerId");
            return this;
        }

        public Criteria andPlayerIdNotEqualTo(Integer value) {
            addCriterion("player_id <>", value, "playerId");
            return this;
        }

        public Criteria andPlayerIdGreaterThan(Integer value) {
            addCriterion("player_id >", value, "playerId");
            return this;
        }

        public Criteria andPlayerIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("player_id >=", value, "playerId");
            return this;
        }

        public Criteria andPlayerIdLessThan(Integer value) {
            addCriterion("player_id <", value, "playerId");
            return this;
        }

        public Criteria andPlayerIdLessThanOrEqualTo(Integer value) {
            addCriterion("player_id <=", value, "playerId");
            return this;
        }

        public Criteria andPlayerIdIn(List values) {
            addCriterion("player_id in", values, "playerId");
            return this;
        }

        public Criteria andPlayerIdNotIn(List values) {
            addCriterion("player_id not in", values, "playerId");
            return this;
        }

        public Criteria andPlayerIdBetween(Integer value1, Integer value2) {
            addCriterion("player_id between", value1, value2, "playerId");
            return this;
        }

        public Criteria andPlayerIdNotBetween(Integer value1, Integer value2) {
            addCriterion("player_id not between", value1, value2, "playerId");
            return this;
        }

        public Criteria andNameIsNull() {
            addCriterion("name is null");
            return this;
        }

        public Criteria andNameIsNotNull() {
            addCriterion("name is not null");
            return this;
        }

        public Criteria andNameEqualTo(String value) {
            addCriterion("name =", value, "name");
            return this;
        }

        public Criteria andNameNotEqualTo(String value) {
            addCriterion("name <>", value, "name");
            return this;
        }

        public Criteria andNameGreaterThan(String value) {
            addCriterion("name >", value, "name");
            return this;
        }

        public Criteria andNameGreaterThanOrEqualTo(String value) {
            addCriterion("name >=", value, "name");
            return this;
        }

        public Criteria andNameLessThan(String value) {
            addCriterion("name <", value, "name");
            return this;
        }

        public Criteria andNameLessThanOrEqualTo(String value) {
            addCriterion("name <=", value, "name");
            return this;
        }

        public Criteria andNameLike(String value) {
            addCriterion("name like", value, "name");
            return this;
        }

        public Criteria andNameNotLike(String value) {
            addCriterion("name not like", value, "name");
            return this;
        }

        public Criteria andNameIn(List values) {
            addCriterion("name in", values, "name");
            return this;
        }

        public Criteria andNameNotIn(List values) {
            addCriterion("name not in", values, "name");
            return this;
        }

        public Criteria andNameBetween(String value1, String value2) {
            addCriterion("name between", value1, value2, "name");
            return this;
        }

        public Criteria andNameNotBetween(String value1, String value2) {
            addCriterion("name not between", value1, value2, "name");
            return this;
        }

        public Criteria andPropConfigIdsIsNull() {
            addCriterion("prop_config_ids is null");
            return this;
        }

        public Criteria andPropConfigIdsIsNotNull() {
            addCriterion("prop_config_ids is not null");
            return this;
        }

        public Criteria andPropConfigIdsEqualTo(String value) {
            addCriterion("prop_config_ids =", value, "propConfigIds");
            return this;
        }

        public Criteria andPropConfigIdsNotEqualTo(String value) {
            addCriterion("prop_config_ids <>", value, "propConfigIds");
            return this;
        }

        public Criteria andPropConfigIdsGreaterThan(String value) {
            addCriterion("prop_config_ids >", value, "propConfigIds");
            return this;
        }

        public Criteria andPropConfigIdsGreaterThanOrEqualTo(String value) {
            addCriterion("prop_config_ids >=", value, "propConfigIds");
            return this;
        }

        public Criteria andPropConfigIdsLessThan(String value) {
            addCriterion("prop_config_ids <", value, "propConfigIds");
            return this;
        }

        public Criteria andPropConfigIdsLessThanOrEqualTo(String value) {
            addCriterion("prop_config_ids <=", value, "propConfigIds");
            return this;
        }

        public Criteria andPropConfigIdsLike(String value) {
            addCriterion("prop_config_ids like", value, "propConfigIds");
            return this;
        }

        public Criteria andPropConfigIdsNotLike(String value) {
            addCriterion("prop_config_ids not like", value, "propConfigIds");
            return this;
        }

        public Criteria andPropConfigIdsIn(List values) {
            addCriterion("prop_config_ids in", values, "propConfigIds");
            return this;
        }

        public Criteria andPropConfigIdsNotIn(List values) {
            addCriterion("prop_config_ids not in", values, "propConfigIds");
            return this;
        }

        public Criteria andPropConfigIdsBetween(String value1, String value2) {
            addCriterion("prop_config_ids between", value1, value2, "propConfigIds");
            return this;
        }

        public Criteria andPropConfigIdsNotBetween(String value1, String value2) {
            addCriterion("prop_config_ids not between", value1, value2, "propConfigIds");
            return this;
        }

        public Criteria andFlageIsNull() {
            addCriterion("flage is null");
            return this;
        }

        public Criteria andFlageIsNotNull() {
            addCriterion("flage is not null");
            return this;
        }

        public Criteria andFlageEqualTo(Integer value) {
            addCriterion("flage =", value, "flage");
            return this;
        }

        public Criteria andFlageNotEqualTo(Integer value) {
            addCriterion("flage <>", value, "flage");
            return this;
        }

        public Criteria andFlageGreaterThan(Integer value) {
            addCriterion("flage >", value, "flage");
            return this;
        }

        public Criteria andFlageGreaterThanOrEqualTo(Integer value) {
            addCriterion("flage >=", value, "flage");
            return this;
        }

        public Criteria andFlageLessThan(Integer value) {
            addCriterion("flage <", value, "flage");
            return this;
        }

        public Criteria andFlageLessThanOrEqualTo(Integer value) {
            addCriterion("flage <=", value, "flage");
            return this;
        }

        public Criteria andFlageIn(List values) {
            addCriterion("flage in", values, "flage");
            return this;
        }

        public Criteria andFlageNotIn(List values) {
            addCriterion("flage not in", values, "flage");
            return this;
        }

        public Criteria andFlageBetween(Integer value1, Integer value2) {
            addCriterion("flage between", value1, value2, "flage");
            return this;
        }

        public Criteria andFlageNotBetween(Integer value1, Integer value2) {
            addCriterion("flage not between", value1, value2, "flage");
            return this;
        }

        public Criteria andGetTimeIsNull() {
            addCriterion("get_time is null");
            return this;
        }

        public Criteria andGetTimeIsNotNull() {
            addCriterion("get_time is not null");
            return this;
        }

        public Criteria andGetTimeEqualTo(Date value) {
            addCriterion("get_time =", value, "getTime");
            return this;
        }

        public Criteria andGetTimeNotEqualTo(Date value) {
            addCriterion("get_time <>", value, "getTime");
            return this;
        }

        public Criteria andGetTimeGreaterThan(Date value) {
            addCriterion("get_time >", value, "getTime");
            return this;
        }

        public Criteria andGetTimeGreaterThanOrEqualTo(Date value) {
            addCriterion("get_time >=", value, "getTime");
            return this;
        }

        public Criteria andGetTimeLessThan(Date value) {
            addCriterion("get_time <", value, "getTime");
            return this;
        }

        public Criteria andGetTimeLessThanOrEqualTo(Date value) {
            addCriterion("get_time <=", value, "getTime");
            return this;
        }

        public Criteria andGetTimeIn(List values) {
            addCriterion("get_time in", values, "getTime");
            return this;
        }

        public Criteria andGetTimeNotIn(List values) {
            addCriterion("get_time not in", values, "getTime");
            return this;
        }

        public Criteria andGetTimeBetween(Date value1, Date value2) {
            addCriterion("get_time between", value1, value2, "getTime");
            return this;
        }

        public Criteria andGetTimeNotBetween(Date value1, Date value2) {
            addCriterion("get_time not between", value1, value2, "getTime");
            return this;
        }

        public Criteria andPrizeTimeIsNull() {
            addCriterion("prize_time is null");
            return this;
        }

        public Criteria andPrizeTimeIsNotNull() {
            addCriterion("prize_time is not null");
            return this;
        }

        public Criteria andPrizeTimeEqualTo(Date value) {
            addCriterion("prize_time =", value, "prizeTime");
            return this;
        }

        public Criteria andPrizeTimeNotEqualTo(Date value) {
            addCriterion("prize_time <>", value, "prizeTime");
            return this;
        }

        public Criteria andPrizeTimeGreaterThan(Date value) {
            addCriterion("prize_time >", value, "prizeTime");
            return this;
        }

        public Criteria andPrizeTimeGreaterThanOrEqualTo(Date value) {
            addCriterion("prize_time >=", value, "prizeTime");
            return this;
        }

        public Criteria andPrizeTimeLessThan(Date value) {
            addCriterion("prize_time <", value, "prizeTime");
            return this;
        }

        public Criteria andPrizeTimeLessThanOrEqualTo(Date value) {
            addCriterion("prize_time <=", value, "prizeTime");
            return this;
        }

        public Criteria andPrizeTimeIn(List values) {
            addCriterion("prize_time in", values, "prizeTime");
            return this;
        }

        public Criteria andPrizeTimeNotIn(List values) {
            addCriterion("prize_time not in", values, "prizeTime");
            return this;
        }

        public Criteria andPrizeTimeBetween(Date value1, Date value2) {
            addCriterion("prize_time between", value1, value2, "prizeTime");
            return this;
        }

        public Criteria andPrizeTimeNotBetween(Date value1, Date value2) {
            addCriterion("prize_time not between", value1, value2, "prizeTime");
            return this;
        }
    }
}