package com.orange.goldgame.domain;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class AppConfigExample {

	/**
	 * This field was generated by Apache iBATIS ibator. This field corresponds to the database table app_config
	 * @ibatorgenerated  Thu Jul 11 17:07:35 CST 2013
	 */
	protected String orderByClause;
	/**
	 * This field was generated by Apache iBATIS ibator. This field corresponds to the database table app_config
	 * @ibatorgenerated  Thu Jul 11 17:07:35 CST 2013
	 */
	protected List oredCriteria;

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table app_config
	 * @ibatorgenerated  Thu Jul 11 17:07:35 CST 2013
	 */
	public AppConfigExample() {
		oredCriteria = new ArrayList();
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table app_config
	 * @ibatorgenerated  Thu Jul 11 17:07:35 CST 2013
	 */
	protected AppConfigExample(AppConfigExample example) {
		this.orderByClause = example.orderByClause;
		this.oredCriteria = example.oredCriteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table app_config
	 * @ibatorgenerated  Thu Jul 11 17:07:35 CST 2013
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table app_config
	 * @ibatorgenerated  Thu Jul 11 17:07:35 CST 2013
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table app_config
	 * @ibatorgenerated  Thu Jul 11 17:07:35 CST 2013
	 */
	public List getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table app_config
	 * @ibatorgenerated  Thu Jul 11 17:07:35 CST 2013
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table app_config
	 * @ibatorgenerated  Thu Jul 11 17:07:35 CST 2013
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table app_config
	 * @ibatorgenerated  Thu Jul 11 17:07:35 CST 2013
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table app_config
	 * @ibatorgenerated  Thu Jul 11 17:07:35 CST 2013
	 */
	public void clear() {
		oredCriteria.clear();
	}

	/**
	 * This class was generated by Apache iBATIS ibator. This class corresponds to the database table app_config
	 * @ibatorgenerated  Thu Jul 11 17:07:35 CST 2013
	 */
	public static class Criteria {
		protected List criteriaWithoutValue;
		protected List criteriaWithSingleValue;
		protected List criteriaWithListValue;
		protected List criteriaWithBetweenValue;

		protected Criteria() {
			super();
			criteriaWithoutValue = new ArrayList();
			criteriaWithSingleValue = new ArrayList();
			criteriaWithListValue = new ArrayList();
			criteriaWithBetweenValue = new ArrayList();
		}

		public boolean isValid() {
			return criteriaWithoutValue.size() > 0
					|| criteriaWithSingleValue.size() > 0
					|| criteriaWithListValue.size() > 0
					|| criteriaWithBetweenValue.size() > 0;
		}

		public List getCriteriaWithoutValue() {
			return criteriaWithoutValue;
		}

		public List getCriteriaWithSingleValue() {
			return criteriaWithSingleValue;
		}

		public List getCriteriaWithListValue() {
			return criteriaWithListValue;
		}

		public List getCriteriaWithBetweenValue() {
			return criteriaWithBetweenValue;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteriaWithoutValue.add(condition);
		}

		protected void addCriterion(String condition, Object value,
				String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property
						+ " cannot be null");
			}
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("value", value);
			criteriaWithSingleValue.add(map);
		}

		protected void addCriterion(String condition, List values,
				String property) {
			if (values == null || values.size() == 0) {
				throw new RuntimeException("Value list for " + property
						+ " cannot be null or empty");
			}
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("values", values);
			criteriaWithListValue.add(map);
		}

		protected void addCriterion(String condition, Object value1,
				Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property
						+ " cannot be null");
			}
			List list = new ArrayList();
			list.add(value1);
			list.add(value2);
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("values", list);
			criteriaWithBetweenValue.add(map);
		}

		public Criteria andIdIsNull() {
			addCriterion("Id is null");
			return this;
		}

		public Criteria andIdIsNotNull() {
			addCriterion("Id is not null");
			return this;
		}

		public Criteria andIdEqualTo(Integer value) {
			addCriterion("Id =", value, "id");
			return this;
		}

		public Criteria andIdNotEqualTo(Integer value) {
			addCriterion("Id <>", value, "id");
			return this;
		}

		public Criteria andIdGreaterThan(Integer value) {
			addCriterion("Id >", value, "id");
			return this;
		}

		public Criteria andIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("Id >=", value, "id");
			return this;
		}

		public Criteria andIdLessThan(Integer value) {
			addCriterion("Id <", value, "id");
			return this;
		}

		public Criteria andIdLessThanOrEqualTo(Integer value) {
			addCriterion("Id <=", value, "id");
			return this;
		}

		public Criteria andIdIn(List values) {
			addCriterion("Id in", values, "id");
			return this;
		}

		public Criteria andIdNotIn(List values) {
			addCriterion("Id not in", values, "id");
			return this;
		}

		public Criteria andIdBetween(Integer value1, Integer value2) {
			addCriterion("Id between", value1, value2, "id");
			return this;
		}

		public Criteria andIdNotBetween(Integer value1, Integer value2) {
			addCriterion("Id not between", value1, value2, "id");
			return this;
		}

		public Criteria andAppKeyIsNull() {
			addCriterion("app_key is null");
			return this;
		}

		public Criteria andAppKeyIsNotNull() {
			addCriterion("app_key is not null");
			return this;
		}

		public Criteria andAppKeyEqualTo(String value) {
			addCriterion("app_key =", value, "appKey");
			return this;
		}

		public Criteria andAppKeyNotEqualTo(String value) {
			addCriterion("app_key <>", value, "appKey");
			return this;
		}

		public Criteria andAppKeyGreaterThan(String value) {
			addCriterion("app_key >", value, "appKey");
			return this;
		}

		public Criteria andAppKeyGreaterThanOrEqualTo(String value) {
			addCriterion("app_key >=", value, "appKey");
			return this;
		}

		public Criteria andAppKeyLessThan(String value) {
			addCriterion("app_key <", value, "appKey");
			return this;
		}

		public Criteria andAppKeyLessThanOrEqualTo(String value) {
			addCriterion("app_key <=", value, "appKey");
			return this;
		}

		public Criteria andAppKeyLike(String value) {
			addCriterion("app_key like", value, "appKey");
			return this;
		}

		public Criteria andAppKeyNotLike(String value) {
			addCriterion("app_key not like", value, "appKey");
			return this;
		}

		public Criteria andAppKeyIn(List values) {
			addCriterion("app_key in", values, "appKey");
			return this;
		}

		public Criteria andAppKeyNotIn(List values) {
			addCriterion("app_key not in", values, "appKey");
			return this;
		}

		public Criteria andAppKeyBetween(String value1, String value2) {
			addCriterion("app_key between", value1, value2, "appKey");
			return this;
		}

		public Criteria andAppKeyNotBetween(String value1, String value2) {
			addCriterion("app_key not between", value1, value2, "appKey");
			return this;
		}

		public Criteria andAppValueIsNull() {
			addCriterion("app_value is null");
			return this;
		}

		public Criteria andAppValueIsNotNull() {
			addCriterion("app_value is not null");
			return this;
		}

		public Criteria andAppValueEqualTo(String value) {
			addCriterion("app_value =", value, "appValue");
			return this;
		}

		public Criteria andAppValueNotEqualTo(String value) {
			addCriterion("app_value <>", value, "appValue");
			return this;
		}

		public Criteria andAppValueGreaterThan(String value) {
			addCriterion("app_value >", value, "appValue");
			return this;
		}

		public Criteria andAppValueGreaterThanOrEqualTo(String value) {
			addCriterion("app_value >=", value, "appValue");
			return this;
		}

		public Criteria andAppValueLessThan(String value) {
			addCriterion("app_value <", value, "appValue");
			return this;
		}

		public Criteria andAppValueLessThanOrEqualTo(String value) {
			addCriterion("app_value <=", value, "appValue");
			return this;
		}

		public Criteria andAppValueLike(String value) {
			addCriterion("app_value like", value, "appValue");
			return this;
		}

		public Criteria andAppValueNotLike(String value) {
			addCriterion("app_value not like", value, "appValue");
			return this;
		}

		public Criteria andAppValueIn(List values) {
			addCriterion("app_value in", values, "appValue");
			return this;
		}

		public Criteria andAppValueNotIn(List values) {
			addCriterion("app_value not in", values, "appValue");
			return this;
		}

		public Criteria andAppValueBetween(String value1, String value2) {
			addCriterion("app_value between", value1, value2, "appValue");
			return this;
		}

		public Criteria andAppValueNotBetween(String value1, String value2) {
			addCriterion("app_value not between", value1, value2, "appValue");
			return this;
		}

		public Criteria andDestancesIsNull() {
			addCriterion("destances is null");
			return this;
		}

		public Criteria andDestancesIsNotNull() {
			addCriterion("destances is not null");
			return this;
		}

		public Criteria andDestancesEqualTo(String value) {
			addCriterion("destances =", value, "destances");
			return this;
		}

		public Criteria andDestancesNotEqualTo(String value) {
			addCriterion("destances <>", value, "destances");
			return this;
		}

		public Criteria andDestancesGreaterThan(String value) {
			addCriterion("destances >", value, "destances");
			return this;
		}

		public Criteria andDestancesGreaterThanOrEqualTo(String value) {
			addCriterion("destances >=", value, "destances");
			return this;
		}

		public Criteria andDestancesLessThan(String value) {
			addCriterion("destances <", value, "destances");
			return this;
		}

		public Criteria andDestancesLessThanOrEqualTo(String value) {
			addCriterion("destances <=", value, "destances");
			return this;
		}

		public Criteria andDestancesLike(String value) {
			addCriterion("destances like", value, "destances");
			return this;
		}

		public Criteria andDestancesNotLike(String value) {
			addCriterion("destances not like", value, "destances");
			return this;
		}

		public Criteria andDestancesIn(List values) {
			addCriterion("destances in", values, "destances");
			return this;
		}

		public Criteria andDestancesNotIn(List values) {
			addCriterion("destances not in", values, "destances");
			return this;
		}

		public Criteria andDestancesBetween(String value1, String value2) {
			addCriterion("destances between", value1, value2, "destances");
			return this;
		}

		public Criteria andDestancesNotBetween(String value1, String value2) {
			addCriterion("destances not between", value1, value2, "destances");
			return this;
		}
	}
}