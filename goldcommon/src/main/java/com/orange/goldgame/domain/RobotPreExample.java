package com.orange.goldgame.domain;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class RobotPreExample {

	/**
	 * This field was generated by Apache iBATIS ibator. This field corresponds to the database table robot_pre
	 * @ibatorgenerated  Wed Jul 17 17:51:47 CST 2013
	 */
	protected String orderByClause;
	/**
	 * This field was generated by Apache iBATIS ibator. This field corresponds to the database table robot_pre
	 * @ibatorgenerated  Wed Jul 17 17:51:47 CST 2013
	 */
	protected List oredCriteria;

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table robot_pre
	 * @ibatorgenerated  Wed Jul 17 17:51:47 CST 2013
	 */
	public RobotPreExample() {
		oredCriteria = new ArrayList();
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table robot_pre
	 * @ibatorgenerated  Wed Jul 17 17:51:47 CST 2013
	 */
	protected RobotPreExample(RobotPreExample example) {
		this.orderByClause = example.orderByClause;
		this.oredCriteria = example.oredCriteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table robot_pre
	 * @ibatorgenerated  Wed Jul 17 17:51:47 CST 2013
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table robot_pre
	 * @ibatorgenerated  Wed Jul 17 17:51:47 CST 2013
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table robot_pre
	 * @ibatorgenerated  Wed Jul 17 17:51:47 CST 2013
	 */
	public List getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table robot_pre
	 * @ibatorgenerated  Wed Jul 17 17:51:47 CST 2013
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table robot_pre
	 * @ibatorgenerated  Wed Jul 17 17:51:47 CST 2013
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table robot_pre
	 * @ibatorgenerated  Wed Jul 17 17:51:47 CST 2013
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table robot_pre
	 * @ibatorgenerated  Wed Jul 17 17:51:47 CST 2013
	 */
	public void clear() {
		oredCriteria.clear();
	}

	/**
	 * This class was generated by Apache iBATIS ibator. This class corresponds to the database table robot_pre
	 * @ibatorgenerated  Wed Jul 17 17:51:47 CST 2013
	 */
	public static class Criteria {
		protected List criteriaWithoutValue;
		protected List criteriaWithSingleValue;
		protected List criteriaWithListValue;
		protected List criteriaWithBetweenValue;

		protected Criteria() {
			super();
			criteriaWithoutValue = new ArrayList();
			criteriaWithSingleValue = new ArrayList();
			criteriaWithListValue = new ArrayList();
			criteriaWithBetweenValue = new ArrayList();
		}

		public boolean isValid() {
			return criteriaWithoutValue.size() > 0
					|| criteriaWithSingleValue.size() > 0
					|| criteriaWithListValue.size() > 0
					|| criteriaWithBetweenValue.size() > 0;
		}

		public List getCriteriaWithoutValue() {
			return criteriaWithoutValue;
		}

		public List getCriteriaWithSingleValue() {
			return criteriaWithSingleValue;
		}

		public List getCriteriaWithListValue() {
			return criteriaWithListValue;
		}

		public List getCriteriaWithBetweenValue() {
			return criteriaWithBetweenValue;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteriaWithoutValue.add(condition);
		}

		protected void addCriterion(String condition, Object value,
				String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property
						+ " cannot be null");
			}
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("value", value);
			criteriaWithSingleValue.add(map);
		}

		protected void addCriterion(String condition, List values,
				String property) {
			if (values == null || values.size() == 0) {
				throw new RuntimeException("Value list for " + property
						+ " cannot be null or empty");
			}
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("values", values);
			criteriaWithListValue.add(map);
		}

		protected void addCriterion(String condition, Object value1,
				Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property
						+ " cannot be null");
			}
			List list = new ArrayList();
			list.add(value1);
			list.add(value2);
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("values", list);
			criteriaWithBetweenValue.add(map);
		}

		public Criteria andIdIsNull() {
			addCriterion("id is null");
			return this;
		}

		public Criteria andIdIsNotNull() {
			addCriterion("id is not null");
			return this;
		}

		public Criteria andIdEqualTo(Integer value) {
			addCriterion("id =", value, "id");
			return this;
		}

		public Criteria andIdNotEqualTo(Integer value) {
			addCriterion("id <>", value, "id");
			return this;
		}

		public Criteria andIdGreaterThan(Integer value) {
			addCriterion("id >", value, "id");
			return this;
		}

		public Criteria andIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("id >=", value, "id");
			return this;
		}

		public Criteria andIdLessThan(Integer value) {
			addCriterion("id <", value, "id");
			return this;
		}

		public Criteria andIdLessThanOrEqualTo(Integer value) {
			addCriterion("id <=", value, "id");
			return this;
		}

		public Criteria andIdIn(List values) {
			addCriterion("id in", values, "id");
			return this;
		}

		public Criteria andIdNotIn(List values) {
			addCriterion("id not in", values, "id");
			return this;
		}

		public Criteria andIdBetween(Integer value1, Integer value2) {
			addCriterion("id between", value1, value2, "id");
			return this;
		}

		public Criteria andIdNotBetween(Integer value1, Integer value2) {
			addCriterion("id not between", value1, value2, "id");
			return this;
		}

		public Criteria andOperationIsNull() {
			addCriterion("operation is null");
			return this;
		}

		public Criteria andOperationIsNotNull() {
			addCriterion("operation is not null");
			return this;
		}

		public Criteria andOperationEqualTo(String value) {
			addCriterion("operation =", value, "operation");
			return this;
		}

		public Criteria andOperationNotEqualTo(String value) {
			addCriterion("operation <>", value, "operation");
			return this;
		}

		public Criteria andOperationGreaterThan(String value) {
			addCriterion("operation >", value, "operation");
			return this;
		}

		public Criteria andOperationGreaterThanOrEqualTo(String value) {
			addCriterion("operation >=", value, "operation");
			return this;
		}

		public Criteria andOperationLessThan(String value) {
			addCriterion("operation <", value, "operation");
			return this;
		}

		public Criteria andOperationLessThanOrEqualTo(String value) {
			addCriterion("operation <=", value, "operation");
			return this;
		}

		public Criteria andOperationLike(String value) {
			addCriterion("operation like", value, "operation");
			return this;
		}

		public Criteria andOperationNotLike(String value) {
			addCriterion("operation not like", value, "operation");
			return this;
		}

		public Criteria andOperationIn(List values) {
			addCriterion("operation in", values, "operation");
			return this;
		}

		public Criteria andOperationNotIn(List values) {
			addCriterion("operation not in", values, "operation");
			return this;
		}

		public Criteria andOperationBetween(String value1, String value2) {
			addCriterion("operation between", value1, value2, "operation");
			return this;
		}

		public Criteria andOperationNotBetween(String value1, String value2) {
			addCriterion("operation not between", value1, value2, "operation");
			return this;
		}

		public Criteria andOperationValueIsNull() {
			addCriterion("operation_value is null");
			return this;
		}

		public Criteria andOperationValueIsNotNull() {
			addCriterion("operation_value is not null");
			return this;
		}

		public Criteria andOperationValueEqualTo(Integer value) {
			addCriterion("operation_value =", value, "operationValue");
			return this;
		}

		public Criteria andOperationValueNotEqualTo(Integer value) {
			addCriterion("operation_value <>", value, "operationValue");
			return this;
		}

		public Criteria andOperationValueGreaterThan(Integer value) {
			addCriterion("operation_value >", value, "operationValue");
			return this;
		}

		public Criteria andOperationValueGreaterThanOrEqualTo(Integer value) {
			addCriterion("operation_value >=", value, "operationValue");
			return this;
		}

		public Criteria andOperationValueLessThan(Integer value) {
			addCriterion("operation_value <", value, "operationValue");
			return this;
		}

		public Criteria andOperationValueLessThanOrEqualTo(Integer value) {
			addCriterion("operation_value <=", value, "operationValue");
			return this;
		}

		public Criteria andOperationValueIn(List values) {
			addCriterion("operation_value in", values, "operationValue");
			return this;
		}

		public Criteria andOperationValueNotIn(List values) {
			addCriterion("operation_value not in", values, "operationValue");
			return this;
		}

		public Criteria andOperationValueBetween(Integer value1, Integer value2) {
			addCriterion("operation_value between", value1, value2,
					"operationValue");
			return this;
		}

		public Criteria andOperationValueNotBetween(Integer value1,
				Integer value2) {
			addCriterion("operation_value not between", value1, value2,
					"operationValue");
			return this;
		}

		public Criteria andOperationTypeIsNull() {
			addCriterion("operation_type is null");
			return this;
		}

		public Criteria andOperationTypeIsNotNull() {
			addCriterion("operation_type is not null");
			return this;
		}

		public Criteria andOperationTypeEqualTo(Integer value) {
			addCriterion("operation_type =", value, "operationType");
			return this;
		}

		public Criteria andOperationTypeNotEqualTo(Integer value) {
			addCriterion("operation_type <>", value, "operationType");
			return this;
		}

		public Criteria andOperationTypeGreaterThan(Integer value) {
			addCriterion("operation_type >", value, "operationType");
			return this;
		}

		public Criteria andOperationTypeGreaterThanOrEqualTo(Integer value) {
			addCriterion("operation_type >=", value, "operationType");
			return this;
		}

		public Criteria andOperationTypeLessThan(Integer value) {
			addCriterion("operation_type <", value, "operationType");
			return this;
		}

		public Criteria andOperationTypeLessThanOrEqualTo(Integer value) {
			addCriterion("operation_type <=", value, "operationType");
			return this;
		}

		public Criteria andOperationTypeIn(List values) {
			addCriterion("operation_type in", values, "operationType");
			return this;
		}

		public Criteria andOperationTypeNotIn(List values) {
			addCriterion("operation_type not in", values, "operationType");
			return this;
		}

		public Criteria andOperationTypeBetween(Integer value1, Integer value2) {
			addCriterion("operation_type between", value1, value2,
					"operationType");
			return this;
		}

		public Criteria andOperationTypeNotBetween(Integer value1,
				Integer value2) {
			addCriterion("operation_type not between", value1, value2,
					"operationType");
			return this;
		}
	}
}