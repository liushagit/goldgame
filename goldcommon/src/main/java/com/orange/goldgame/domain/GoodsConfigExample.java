package com.orange.goldgame.domain;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class GoodsConfigExample {

	/**
	 * This field was generated by Apache iBATIS ibator. This field corresponds to the database table goods_config
	 * @ibatorgenerated  Tue Sep 10 20:35:12 CST 2013
	 */
	protected String orderByClause;
	/**
	 * This field was generated by Apache iBATIS ibator. This field corresponds to the database table goods_config
	 * @ibatorgenerated  Tue Sep 10 20:35:12 CST 2013
	 */
	protected List oredCriteria;

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table goods_config
	 * @ibatorgenerated  Tue Sep 10 20:35:12 CST 2013
	 */
	public GoodsConfigExample() {
		oredCriteria = new ArrayList();
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table goods_config
	 * @ibatorgenerated  Tue Sep 10 20:35:12 CST 2013
	 */
	protected GoodsConfigExample(GoodsConfigExample example) {
		this.orderByClause = example.orderByClause;
		this.oredCriteria = example.oredCriteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table goods_config
	 * @ibatorgenerated  Tue Sep 10 20:35:12 CST 2013
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table goods_config
	 * @ibatorgenerated  Tue Sep 10 20:35:12 CST 2013
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table goods_config
	 * @ibatorgenerated  Tue Sep 10 20:35:12 CST 2013
	 */
	public List getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table goods_config
	 * @ibatorgenerated  Tue Sep 10 20:35:12 CST 2013
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table goods_config
	 * @ibatorgenerated  Tue Sep 10 20:35:12 CST 2013
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table goods_config
	 * @ibatorgenerated  Tue Sep 10 20:35:12 CST 2013
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table goods_config
	 * @ibatorgenerated  Tue Sep 10 20:35:12 CST 2013
	 */
	public void clear() {
		oredCriteria.clear();
	}

	/**
	 * This class was generated by Apache iBATIS ibator. This class corresponds to the database table goods_config
	 * @ibatorgenerated  Tue Sep 10 20:35:12 CST 2013
	 */
	public static class Criteria {
		protected List criteriaWithoutValue;
		protected List criteriaWithSingleValue;
		protected List criteriaWithListValue;
		protected List criteriaWithBetweenValue;

		protected Criteria() {
			super();
			criteriaWithoutValue = new ArrayList();
			criteriaWithSingleValue = new ArrayList();
			criteriaWithListValue = new ArrayList();
			criteriaWithBetweenValue = new ArrayList();
		}

		public boolean isValid() {
			return criteriaWithoutValue.size() > 0
					|| criteriaWithSingleValue.size() > 0
					|| criteriaWithListValue.size() > 0
					|| criteriaWithBetweenValue.size() > 0;
		}

		public List getCriteriaWithoutValue() {
			return criteriaWithoutValue;
		}

		public List getCriteriaWithSingleValue() {
			return criteriaWithSingleValue;
		}

		public List getCriteriaWithListValue() {
			return criteriaWithListValue;
		}

		public List getCriteriaWithBetweenValue() {
			return criteriaWithBetweenValue;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteriaWithoutValue.add(condition);
		}

		protected void addCriterion(String condition, Object value,
				String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property
						+ " cannot be null");
			}
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("value", value);
			criteriaWithSingleValue.add(map);
		}

		protected void addCriterion(String condition, List values,
				String property) {
			if (values == null || values.size() == 0) {
				throw new RuntimeException("Value list for " + property
						+ " cannot be null or empty");
			}
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("values", values);
			criteriaWithListValue.add(map);
		}

		protected void addCriterion(String condition, Object value1,
				Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property
						+ " cannot be null");
			}
			List list = new ArrayList();
			list.add(value1);
			list.add(value2);
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("values", list);
			criteriaWithBetweenValue.add(map);
		}

		public Criteria andIdIsNull() {
			addCriterion("id is null");
			return this;
		}

		public Criteria andIdIsNotNull() {
			addCriterion("id is not null");
			return this;
		}

		public Criteria andIdEqualTo(Integer value) {
			addCriterion("id =", value, "id");
			return this;
		}

		public Criteria andIdNotEqualTo(Integer value) {
			addCriterion("id <>", value, "id");
			return this;
		}

		public Criteria andIdGreaterThan(Integer value) {
			addCriterion("id >", value, "id");
			return this;
		}

		public Criteria andIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("id >=", value, "id");
			return this;
		}

		public Criteria andIdLessThan(Integer value) {
			addCriterion("id <", value, "id");
			return this;
		}

		public Criteria andIdLessThanOrEqualTo(Integer value) {
			addCriterion("id <=", value, "id");
			return this;
		}

		public Criteria andIdIn(List values) {
			addCriterion("id in", values, "id");
			return this;
		}

		public Criteria andIdNotIn(List values) {
			addCriterion("id not in", values, "id");
			return this;
		}

		public Criteria andIdBetween(Integer value1, Integer value2) {
			addCriterion("id between", value1, value2, "id");
			return this;
		}

		public Criteria andIdNotBetween(Integer value1, Integer value2) {
			addCriterion("id not between", value1, value2, "id");
			return this;
		}

		public Criteria andGoodsNameIsNull() {
			addCriterion("goods_Name is null");
			return this;
		}

		public Criteria andGoodsNameIsNotNull() {
			addCriterion("goods_Name is not null");
			return this;
		}

		public Criteria andGoodsNameEqualTo(String value) {
			addCriterion("goods_Name =", value, "goodsName");
			return this;
		}

		public Criteria andGoodsNameNotEqualTo(String value) {
			addCriterion("goods_Name <>", value, "goodsName");
			return this;
		}

		public Criteria andGoodsNameGreaterThan(String value) {
			addCriterion("goods_Name >", value, "goodsName");
			return this;
		}

		public Criteria andGoodsNameGreaterThanOrEqualTo(String value) {
			addCriterion("goods_Name >=", value, "goodsName");
			return this;
		}

		public Criteria andGoodsNameLessThan(String value) {
			addCriterion("goods_Name <", value, "goodsName");
			return this;
		}

		public Criteria andGoodsNameLessThanOrEqualTo(String value) {
			addCriterion("goods_Name <=", value, "goodsName");
			return this;
		}

		public Criteria andGoodsNameLike(String value) {
			addCriterion("goods_Name like", value, "goodsName");
			return this;
		}

		public Criteria andGoodsNameNotLike(String value) {
			addCriterion("goods_Name not like", value, "goodsName");
			return this;
		}

		public Criteria andGoodsNameIn(List values) {
			addCriterion("goods_Name in", values, "goodsName");
			return this;
		}

		public Criteria andGoodsNameNotIn(List values) {
			addCriterion("goods_Name not in", values, "goodsName");
			return this;
		}

		public Criteria andGoodsNameBetween(String value1, String value2) {
			addCriterion("goods_Name between", value1, value2, "goodsName");
			return this;
		}

		public Criteria andGoodsNameNotBetween(String value1, String value2) {
			addCriterion("goods_Name not between", value1, value2, "goodsName");
			return this;
		}

		public Criteria andExchangVoucherIsNull() {
			addCriterion("exchang_Voucher is null");
			return this;
		}

		public Criteria andExchangVoucherIsNotNull() {
			addCriterion("exchang_Voucher is not null");
			return this;
		}

		public Criteria andExchangVoucherEqualTo(Integer value) {
			addCriterion("exchang_Voucher =", value, "exchangVoucher");
			return this;
		}

		public Criteria andExchangVoucherNotEqualTo(Integer value) {
			addCriterion("exchang_Voucher <>", value, "exchangVoucher");
			return this;
		}

		public Criteria andExchangVoucherGreaterThan(Integer value) {
			addCriterion("exchang_Voucher >", value, "exchangVoucher");
			return this;
		}

		public Criteria andExchangVoucherGreaterThanOrEqualTo(Integer value) {
			addCriterion("exchang_Voucher >=", value, "exchangVoucher");
			return this;
		}

		public Criteria andExchangVoucherLessThan(Integer value) {
			addCriterion("exchang_Voucher <", value, "exchangVoucher");
			return this;
		}

		public Criteria andExchangVoucherLessThanOrEqualTo(Integer value) {
			addCriterion("exchang_Voucher <=", value, "exchangVoucher");
			return this;
		}

		public Criteria andExchangVoucherIn(List values) {
			addCriterion("exchang_Voucher in", values, "exchangVoucher");
			return this;
		}

		public Criteria andExchangVoucherNotIn(List values) {
			addCriterion("exchang_Voucher not in", values, "exchangVoucher");
			return this;
		}

		public Criteria andExchangVoucherBetween(Integer value1, Integer value2) {
			addCriterion("exchang_Voucher between", value1, value2,
					"exchangVoucher");
			return this;
		}

		public Criteria andExchangVoucherNotBetween(Integer value1,
				Integer value2) {
			addCriterion("exchang_Voucher not between", value1, value2,
					"exchangVoucher");
			return this;
		}

		public Criteria andGoodsIntroIsNull() {
			addCriterion("goods_intro is null");
			return this;
		}

		public Criteria andGoodsIntroIsNotNull() {
			addCriterion("goods_intro is not null");
			return this;
		}

		public Criteria andGoodsIntroEqualTo(String value) {
			addCriterion("goods_intro =", value, "goodsIntro");
			return this;
		}

		public Criteria andGoodsIntroNotEqualTo(String value) {
			addCriterion("goods_intro <>", value, "goodsIntro");
			return this;
		}

		public Criteria andGoodsIntroGreaterThan(String value) {
			addCriterion("goods_intro >", value, "goodsIntro");
			return this;
		}

		public Criteria andGoodsIntroGreaterThanOrEqualTo(String value) {
			addCriterion("goods_intro >=", value, "goodsIntro");
			return this;
		}

		public Criteria andGoodsIntroLessThan(String value) {
			addCriterion("goods_intro <", value, "goodsIntro");
			return this;
		}

		public Criteria andGoodsIntroLessThanOrEqualTo(String value) {
			addCriterion("goods_intro <=", value, "goodsIntro");
			return this;
		}

		public Criteria andGoodsIntroLike(String value) {
			addCriterion("goods_intro like", value, "goodsIntro");
			return this;
		}

		public Criteria andGoodsIntroNotLike(String value) {
			addCriterion("goods_intro not like", value, "goodsIntro");
			return this;
		}

		public Criteria andGoodsIntroIn(List values) {
			addCriterion("goods_intro in", values, "goodsIntro");
			return this;
		}

		public Criteria andGoodsIntroNotIn(List values) {
			addCriterion("goods_intro not in", values, "goodsIntro");
			return this;
		}

		public Criteria andGoodsIntroBetween(String value1, String value2) {
			addCriterion("goods_intro between", value1, value2, "goodsIntro");
			return this;
		}

		public Criteria andGoodsIntroNotBetween(String value1, String value2) {
			addCriterion("goods_intro not between", value1, value2,
					"goodsIntro");
			return this;
		}

		public Criteria andGoldUrlIsNull() {
			addCriterion("gold_url is null");
			return this;
		}

		public Criteria andGoldUrlIsNotNull() {
			addCriterion("gold_url is not null");
			return this;
		}

		public Criteria andGoldUrlEqualTo(String value) {
			addCriterion("gold_url =", value, "goldUrl");
			return this;
		}

		public Criteria andGoldUrlNotEqualTo(String value) {
			addCriterion("gold_url <>", value, "goldUrl");
			return this;
		}

		public Criteria andGoldUrlGreaterThan(String value) {
			addCriterion("gold_url >", value, "goldUrl");
			return this;
		}

		public Criteria andGoldUrlGreaterThanOrEqualTo(String value) {
			addCriterion("gold_url >=", value, "goldUrl");
			return this;
		}

		public Criteria andGoldUrlLessThan(String value) {
			addCriterion("gold_url <", value, "goldUrl");
			return this;
		}

		public Criteria andGoldUrlLessThanOrEqualTo(String value) {
			addCriterion("gold_url <=", value, "goldUrl");
			return this;
		}

		public Criteria andGoldUrlLike(String value) {
			addCriterion("gold_url like", value, "goldUrl");
			return this;
		}

		public Criteria andGoldUrlNotLike(String value) {
			addCriterion("gold_url not like", value, "goldUrl");
			return this;
		}

		public Criteria andGoldUrlIn(List values) {
			addCriterion("gold_url in", values, "goldUrl");
			return this;
		}

		public Criteria andGoldUrlNotIn(List values) {
			addCriterion("gold_url not in", values, "goldUrl");
			return this;
		}

		public Criteria andGoldUrlBetween(String value1, String value2) {
			addCriterion("gold_url between", value1, value2, "goldUrl");
			return this;
		}

		public Criteria andGoldUrlNotBetween(String value1, String value2) {
			addCriterion("gold_url not between", value1, value2, "goldUrl");
			return this;
		}
	}
}