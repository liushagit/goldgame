package com.orange.goldgame.domain;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class HelpQaExample {

	/**
	 * This field was generated by Apache iBATIS ibator. This field corresponds to the database table help_qa
	 * @ibatorgenerated  Wed Jul 24 10:22:52 CST 2013
	 */
	protected String orderByClause;
	/**
	 * This field was generated by Apache iBATIS ibator. This field corresponds to the database table help_qa
	 * @ibatorgenerated  Wed Jul 24 10:22:52 CST 2013
	 */
	protected List oredCriteria;

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table help_qa
	 * @ibatorgenerated  Wed Jul 24 10:22:52 CST 2013
	 */
	public HelpQaExample() {
		oredCriteria = new ArrayList();
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table help_qa
	 * @ibatorgenerated  Wed Jul 24 10:22:52 CST 2013
	 */
	protected HelpQaExample(HelpQaExample example) {
		this.orderByClause = example.orderByClause;
		this.oredCriteria = example.oredCriteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table help_qa
	 * @ibatorgenerated  Wed Jul 24 10:22:52 CST 2013
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table help_qa
	 * @ibatorgenerated  Wed Jul 24 10:22:52 CST 2013
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table help_qa
	 * @ibatorgenerated  Wed Jul 24 10:22:52 CST 2013
	 */
	public List getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table help_qa
	 * @ibatorgenerated  Wed Jul 24 10:22:52 CST 2013
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table help_qa
	 * @ibatorgenerated  Wed Jul 24 10:22:52 CST 2013
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table help_qa
	 * @ibatorgenerated  Wed Jul 24 10:22:52 CST 2013
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table help_qa
	 * @ibatorgenerated  Wed Jul 24 10:22:52 CST 2013
	 */
	public void clear() {
		oredCriteria.clear();
	}

	/**
	 * This class was generated by Apache iBATIS ibator. This class corresponds to the database table help_qa
	 * @ibatorgenerated  Wed Jul 24 10:22:52 CST 2013
	 */
	public static class Criteria {
		protected List criteriaWithoutValue;
		protected List criteriaWithSingleValue;
		protected List criteriaWithListValue;
		protected List criteriaWithBetweenValue;

		protected Criteria() {
			super();
			criteriaWithoutValue = new ArrayList();
			criteriaWithSingleValue = new ArrayList();
			criteriaWithListValue = new ArrayList();
			criteriaWithBetweenValue = new ArrayList();
		}

		public boolean isValid() {
			return criteriaWithoutValue.size() > 0
					|| criteriaWithSingleValue.size() > 0
					|| criteriaWithListValue.size() > 0
					|| criteriaWithBetweenValue.size() > 0;
		}

		public List getCriteriaWithoutValue() {
			return criteriaWithoutValue;
		}

		public List getCriteriaWithSingleValue() {
			return criteriaWithSingleValue;
		}

		public List getCriteriaWithListValue() {
			return criteriaWithListValue;
		}

		public List getCriteriaWithBetweenValue() {
			return criteriaWithBetweenValue;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteriaWithoutValue.add(condition);
		}

		protected void addCriterion(String condition, Object value,
				String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property
						+ " cannot be null");
			}
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("value", value);
			criteriaWithSingleValue.add(map);
		}

		protected void addCriterion(String condition, List values,
				String property) {
			if (values == null || values.size() == 0) {
				throw new RuntimeException("Value list for " + property
						+ " cannot be null or empty");
			}
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("values", values);
			criteriaWithListValue.add(map);
		}

		protected void addCriterion(String condition, Object value1,
				Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property
						+ " cannot be null");
			}
			List list = new ArrayList();
			list.add(value1);
			list.add(value2);
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("values", list);
			criteriaWithBetweenValue.add(map);
		}

		public Criteria andIdIsNull() {
			addCriterion("id is null");
			return this;
		}

		public Criteria andIdIsNotNull() {
			addCriterion("id is not null");
			return this;
		}

		public Criteria andIdEqualTo(Integer value) {
			addCriterion("id =", value, "id");
			return this;
		}

		public Criteria andIdNotEqualTo(Integer value) {
			addCriterion("id <>", value, "id");
			return this;
		}

		public Criteria andIdGreaterThan(Integer value) {
			addCriterion("id >", value, "id");
			return this;
		}

		public Criteria andIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("id >=", value, "id");
			return this;
		}

		public Criteria andIdLessThan(Integer value) {
			addCriterion("id <", value, "id");
			return this;
		}

		public Criteria andIdLessThanOrEqualTo(Integer value) {
			addCriterion("id <=", value, "id");
			return this;
		}

		public Criteria andIdIn(List values) {
			addCriterion("id in", values, "id");
			return this;
		}

		public Criteria andIdNotIn(List values) {
			addCriterion("id not in", values, "id");
			return this;
		}

		public Criteria andIdBetween(Integer value1, Integer value2) {
			addCriterion("id between", value1, value2, "id");
			return this;
		}

		public Criteria andIdNotBetween(Integer value1, Integer value2) {
			addCriterion("id not between", value1, value2, "id");
			return this;
		}

		public Criteria andQuestionIsNull() {
			addCriterion("question is null");
			return this;
		}

		public Criteria andQuestionIsNotNull() {
			addCriterion("question is not null");
			return this;
		}

		public Criteria andQuestionEqualTo(String value) {
			addCriterion("question =", value, "question");
			return this;
		}

		public Criteria andQuestionNotEqualTo(String value) {
			addCriterion("question <>", value, "question");
			return this;
		}

		public Criteria andQuestionGreaterThan(String value) {
			addCriterion("question >", value, "question");
			return this;
		}

		public Criteria andQuestionGreaterThanOrEqualTo(String value) {
			addCriterion("question >=", value, "question");
			return this;
		}

		public Criteria andQuestionLessThan(String value) {
			addCriterion("question <", value, "question");
			return this;
		}

		public Criteria andQuestionLessThanOrEqualTo(String value) {
			addCriterion("question <=", value, "question");
			return this;
		}

		public Criteria andQuestionLike(String value) {
			addCriterion("question like", value, "question");
			return this;
		}

		public Criteria andQuestionNotLike(String value) {
			addCriterion("question not like", value, "question");
			return this;
		}

		public Criteria andQuestionIn(List values) {
			addCriterion("question in", values, "question");
			return this;
		}

		public Criteria andQuestionNotIn(List values) {
			addCriterion("question not in", values, "question");
			return this;
		}

		public Criteria andQuestionBetween(String value1, String value2) {
			addCriterion("question between", value1, value2, "question");
			return this;
		}

		public Criteria andQuestionNotBetween(String value1, String value2) {
			addCriterion("question not between", value1, value2, "question");
			return this;
		}

		public Criteria andAnswerIsNull() {
			addCriterion("answer is null");
			return this;
		}

		public Criteria andAnswerIsNotNull() {
			addCriterion("answer is not null");
			return this;
		}

		public Criteria andAnswerEqualTo(String value) {
			addCriterion("answer =", value, "answer");
			return this;
		}

		public Criteria andAnswerNotEqualTo(String value) {
			addCriterion("answer <>", value, "answer");
			return this;
		}

		public Criteria andAnswerGreaterThan(String value) {
			addCriterion("answer >", value, "answer");
			return this;
		}

		public Criteria andAnswerGreaterThanOrEqualTo(String value) {
			addCriterion("answer >=", value, "answer");
			return this;
		}

		public Criteria andAnswerLessThan(String value) {
			addCriterion("answer <", value, "answer");
			return this;
		}

		public Criteria andAnswerLessThanOrEqualTo(String value) {
			addCriterion("answer <=", value, "answer");
			return this;
		}

		public Criteria andAnswerLike(String value) {
			addCriterion("answer like", value, "answer");
			return this;
		}

		public Criteria andAnswerNotLike(String value) {
			addCriterion("answer not like", value, "answer");
			return this;
		}

		public Criteria andAnswerIn(List values) {
			addCriterion("answer in", values, "answer");
			return this;
		}

		public Criteria andAnswerNotIn(List values) {
			addCriterion("answer not in", values, "answer");
			return this;
		}

		public Criteria andAnswerBetween(String value1, String value2) {
			addCriterion("answer between", value1, value2, "answer");
			return this;
		}

		public Criteria andAnswerNotBetween(String value1, String value2) {
			addCriterion("answer not between", value1, value2, "answer");
			return this;
		}

		public Criteria andHelpTypeIsNull() {
			addCriterion("help_type is null");
			return this;
		}

		public Criteria andHelpTypeIsNotNull() {
			addCriterion("help_type is not null");
			return this;
		}

		public Criteria andHelpTypeEqualTo(Integer value) {
			addCriterion("help_type =", value, "helpType");
			return this;
		}

		public Criteria andHelpTypeNotEqualTo(Integer value) {
			addCriterion("help_type <>", value, "helpType");
			return this;
		}

		public Criteria andHelpTypeGreaterThan(Integer value) {
			addCriterion("help_type >", value, "helpType");
			return this;
		}

		public Criteria andHelpTypeGreaterThanOrEqualTo(Integer value) {
			addCriterion("help_type >=", value, "helpType");
			return this;
		}

		public Criteria andHelpTypeLessThan(Integer value) {
			addCriterion("help_type <", value, "helpType");
			return this;
		}

		public Criteria andHelpTypeLessThanOrEqualTo(Integer value) {
			addCriterion("help_type <=", value, "helpType");
			return this;
		}

		public Criteria andHelpTypeIn(List values) {
			addCriterion("help_type in", values, "helpType");
			return this;
		}

		public Criteria andHelpTypeNotIn(List values) {
			addCriterion("help_type not in", values, "helpType");
			return this;
		}

		public Criteria andHelpTypeBetween(Integer value1, Integer value2) {
			addCriterion("help_type between", value1, value2, "helpType");
			return this;
		}

		public Criteria andHelpTypeNotBetween(Integer value1, Integer value2) {
			addCriterion("help_type not between", value1, value2, "helpType");
			return this;
		}
	}
}