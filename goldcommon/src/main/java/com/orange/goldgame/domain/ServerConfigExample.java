package com.orange.goldgame.domain;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class ServerConfigExample {

	/**
	 * This field was generated by Apache iBATIS ibator. This field corresponds to the database table server_config
	 * @ibatorgenerated  Thu Jul 04 18:10:48 CST 2013
	 */
	protected String orderByClause;
	/**
	 * This field was generated by Apache iBATIS ibator. This field corresponds to the database table server_config
	 * @ibatorgenerated  Thu Jul 04 18:10:48 CST 2013
	 */
	protected List oredCriteria;

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table server_config
	 * @ibatorgenerated  Thu Jul 04 18:10:48 CST 2013
	 */
	public ServerConfigExample() {
		oredCriteria = new ArrayList();
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table server_config
	 * @ibatorgenerated  Thu Jul 04 18:10:48 CST 2013
	 */
	protected ServerConfigExample(ServerConfigExample example) {
		this.orderByClause = example.orderByClause;
		this.oredCriteria = example.oredCriteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table server_config
	 * @ibatorgenerated  Thu Jul 04 18:10:48 CST 2013
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table server_config
	 * @ibatorgenerated  Thu Jul 04 18:10:48 CST 2013
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table server_config
	 * @ibatorgenerated  Thu Jul 04 18:10:48 CST 2013
	 */
	public List getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table server_config
	 * @ibatorgenerated  Thu Jul 04 18:10:48 CST 2013
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table server_config
	 * @ibatorgenerated  Thu Jul 04 18:10:48 CST 2013
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table server_config
	 * @ibatorgenerated  Thu Jul 04 18:10:48 CST 2013
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table server_config
	 * @ibatorgenerated  Thu Jul 04 18:10:48 CST 2013
	 */
	public void clear() {
		oredCriteria.clear();
	}

	/**
	 * This class was generated by Apache iBATIS ibator. This class corresponds to the database table server_config
	 * @ibatorgenerated  Thu Jul 04 18:10:48 CST 2013
	 */
	public static class Criteria {
		protected List criteriaWithoutValue;
		protected List criteriaWithSingleValue;
		protected List criteriaWithListValue;
		protected List criteriaWithBetweenValue;

		protected Criteria() {
			super();
			criteriaWithoutValue = new ArrayList();
			criteriaWithSingleValue = new ArrayList();
			criteriaWithListValue = new ArrayList();
			criteriaWithBetweenValue = new ArrayList();
		}

		public boolean isValid() {
			return criteriaWithoutValue.size() > 0
					|| criteriaWithSingleValue.size() > 0
					|| criteriaWithListValue.size() > 0
					|| criteriaWithBetweenValue.size() > 0;
		}

		public List getCriteriaWithoutValue() {
			return criteriaWithoutValue;
		}

		public List getCriteriaWithSingleValue() {
			return criteriaWithSingleValue;
		}

		public List getCriteriaWithListValue() {
			return criteriaWithListValue;
		}

		public List getCriteriaWithBetweenValue() {
			return criteriaWithBetweenValue;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteriaWithoutValue.add(condition);
		}

		protected void addCriterion(String condition, Object value,
				String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property
						+ " cannot be null");
			}
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("value", value);
			criteriaWithSingleValue.add(map);
		}

		protected void addCriterion(String condition, List values,
				String property) {
			if (values == null || values.size() == 0) {
				throw new RuntimeException("Value list for " + property
						+ " cannot be null or empty");
			}
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("values", values);
			criteriaWithListValue.add(map);
		}

		protected void addCriterion(String condition, Object value1,
				Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property
						+ " cannot be null");
			}
			List list = new ArrayList();
			list.add(value1);
			list.add(value2);
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("values", list);
			criteriaWithBetweenValue.add(map);
		}

		public Criteria andIdIsNull() {
			addCriterion("id is null");
			return this;
		}

		public Criteria andIdIsNotNull() {
			addCriterion("id is not null");
			return this;
		}

		public Criteria andIdEqualTo(Integer value) {
			addCriterion("id =", value, "id");
			return this;
		}

		public Criteria andIdNotEqualTo(Integer value) {
			addCriterion("id <>", value, "id");
			return this;
		}

		public Criteria andIdGreaterThan(Integer value) {
			addCriterion("id >", value, "id");
			return this;
		}

		public Criteria andIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("id >=", value, "id");
			return this;
		}

		public Criteria andIdLessThan(Integer value) {
			addCriterion("id <", value, "id");
			return this;
		}

		public Criteria andIdLessThanOrEqualTo(Integer value) {
			addCriterion("id <=", value, "id");
			return this;
		}

		public Criteria andIdIn(List values) {
			addCriterion("id in", values, "id");
			return this;
		}

		public Criteria andIdNotIn(List values) {
			addCriterion("id not in", values, "id");
			return this;
		}

		public Criteria andIdBetween(Integer value1, Integer value2) {
			addCriterion("id between", value1, value2, "id");
			return this;
		}

		public Criteria andIdNotBetween(Integer value1, Integer value2) {
			addCriterion("id not between", value1, value2, "id");
			return this;
		}

		public Criteria andServerIpIsNull() {
			addCriterion("server_ip is null");
			return this;
		}

		public Criteria andServerIpIsNotNull() {
			addCriterion("server_ip is not null");
			return this;
		}

		public Criteria andServerIpEqualTo(String value) {
			addCriterion("server_ip =", value, "serverIp");
			return this;
		}

		public Criteria andServerIpNotEqualTo(String value) {
			addCriterion("server_ip <>", value, "serverIp");
			return this;
		}

		public Criteria andServerIpGreaterThan(String value) {
			addCriterion("server_ip >", value, "serverIp");
			return this;
		}

		public Criteria andServerIpGreaterThanOrEqualTo(String value) {
			addCriterion("server_ip >=", value, "serverIp");
			return this;
		}

		public Criteria andServerIpLessThan(String value) {
			addCriterion("server_ip <", value, "serverIp");
			return this;
		}

		public Criteria andServerIpLessThanOrEqualTo(String value) {
			addCriterion("server_ip <=", value, "serverIp");
			return this;
		}

		public Criteria andServerIpLike(String value) {
			addCriterion("server_ip like", value, "serverIp");
			return this;
		}

		public Criteria andServerIpNotLike(String value) {
			addCriterion("server_ip not like", value, "serverIp");
			return this;
		}

		public Criteria andServerIpIn(List values) {
			addCriterion("server_ip in", values, "serverIp");
			return this;
		}

		public Criteria andServerIpNotIn(List values) {
			addCriterion("server_ip not in", values, "serverIp");
			return this;
		}

		public Criteria andServerIpBetween(String value1, String value2) {
			addCriterion("server_ip between", value1, value2, "serverIp");
			return this;
		}

		public Criteria andServerIpNotBetween(String value1, String value2) {
			addCriterion("server_ip not between", value1, value2, "serverIp");
			return this;
		}

		public Criteria andServerPortIsNull() {
			addCriterion("server_port is null");
			return this;
		}

		public Criteria andServerPortIsNotNull() {
			addCriterion("server_port is not null");
			return this;
		}

		public Criteria andServerPortEqualTo(Integer value) {
			addCriterion("server_port =", value, "serverPort");
			return this;
		}

		public Criteria andServerPortNotEqualTo(Integer value) {
			addCriterion("server_port <>", value, "serverPort");
			return this;
		}

		public Criteria andServerPortGreaterThan(Integer value) {
			addCriterion("server_port >", value, "serverPort");
			return this;
		}

		public Criteria andServerPortGreaterThanOrEqualTo(Integer value) {
			addCriterion("server_port >=", value, "serverPort");
			return this;
		}

		public Criteria andServerPortLessThan(Integer value) {
			addCriterion("server_port <", value, "serverPort");
			return this;
		}

		public Criteria andServerPortLessThanOrEqualTo(Integer value) {
			addCriterion("server_port <=", value, "serverPort");
			return this;
		}

		public Criteria andServerPortIn(List values) {
			addCriterion("server_port in", values, "serverPort");
			return this;
		}

		public Criteria andServerPortNotIn(List values) {
			addCriterion("server_port not in", values, "serverPort");
			return this;
		}

		public Criteria andServerPortBetween(Integer value1, Integer value2) {
			addCriterion("server_port between", value1, value2, "serverPort");
			return this;
		}

		public Criteria andServerPortNotBetween(Integer value1, Integer value2) {
			addCriterion("server_port not between", value1, value2,
					"serverPort");
			return this;
		}

		public Criteria andPlayerNumIsNull() {
			addCriterion("player_num is null");
			return this;
		}

		public Criteria andPlayerNumIsNotNull() {
			addCriterion("player_num is not null");
			return this;
		}

		public Criteria andPlayerNumEqualTo(Integer value) {
			addCriterion("player_num =", value, "playerNum");
			return this;
		}

		public Criteria andPlayerNumNotEqualTo(Integer value) {
			addCriterion("player_num <>", value, "playerNum");
			return this;
		}

		public Criteria andPlayerNumGreaterThan(Integer value) {
			addCriterion("player_num >", value, "playerNum");
			return this;
		}

		public Criteria andPlayerNumGreaterThanOrEqualTo(Integer value) {
			addCriterion("player_num >=", value, "playerNum");
			return this;
		}

		public Criteria andPlayerNumLessThan(Integer value) {
			addCriterion("player_num <", value, "playerNum");
			return this;
		}

		public Criteria andPlayerNumLessThanOrEqualTo(Integer value) {
			addCriterion("player_num <=", value, "playerNum");
			return this;
		}

		public Criteria andPlayerNumIn(List values) {
			addCriterion("player_num in", values, "playerNum");
			return this;
		}

		public Criteria andPlayerNumNotIn(List values) {
			addCriterion("player_num not in", values, "playerNum");
			return this;
		}

		public Criteria andPlayerNumBetween(Integer value1, Integer value2) {
			addCriterion("player_num between", value1, value2, "playerNum");
			return this;
		}

		public Criteria andPlayerNumNotBetween(Integer value1, Integer value2) {
			addCriterion("player_num not between", value1, value2, "playerNum");
			return this;
		}
	}
}