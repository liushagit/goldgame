package com.orange.goldgame.system.dao;

import java.sql.SQLException;
import java.util.List;

import com.ibatis.sqlmap.client.SqlMapClient;
import com.orange.goldgame.domain.ExchangeRecord;
import com.orange.goldgame.domain.ExchangeRecordExample;

public class ExchangeRecordDAOImpl implements ExchangeRecordDAO {
    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table exchange_record
     *
     * @ibatorgenerated Fri Jul 19 17:21:54 CST 2013
     */
    private SqlMapClient sqlMapClient;

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table exchange_record
     *
     * @ibatorgenerated Fri Jul 19 17:21:54 CST 2013
     */
    public ExchangeRecordDAOImpl(SqlMapClient sqlMapClient) {
        super();
        this.sqlMapClient = sqlMapClient;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table exchange_record
     *
     * @ibatorgenerated Fri Jul 19 17:21:54 CST 2013
     */
    public int countByExample(ExchangeRecordExample example) throws SQLException {
        Integer count = (Integer)  sqlMapClient.queryForObject("exchange_record.ibatorgenerated_countByExample", example);
        return count.intValue();
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table exchange_record
     *
     * @ibatorgenerated Fri Jul 19 17:21:54 CST 2013
     */
    public int deleteByExample(ExchangeRecordExample example) throws SQLException {
        int rows = sqlMapClient.delete("exchange_record.ibatorgenerated_deleteByExample", example);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table exchange_record
     *
     * @ibatorgenerated Fri Jul 19 17:21:54 CST 2013
     */
    public int deleteByPrimaryKey(Integer recordid) throws SQLException {
        ExchangeRecord key = new ExchangeRecord();
        key.setRecordid(recordid);
        int rows = sqlMapClient.delete("exchange_record.ibatorgenerated_deleteByPrimaryKey", key);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table exchange_record
     *
     * @ibatorgenerated Fri Jul 19 17:21:54 CST 2013
     */
    public void insert(ExchangeRecord record) throws SQLException {
        sqlMapClient.insert("exchange_record.ibatorgenerated_insert", record);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table exchange_record
     *
     * @ibatorgenerated Fri Jul 19 17:21:54 CST 2013
     */
    public void insertSelective(ExchangeRecord record) throws SQLException {
        sqlMapClient.insert("exchange_record.ibatorgenerated_insertSelective", record);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table exchange_record
     *
     * @ibatorgenerated Fri Jul 19 17:21:54 CST 2013
     */
    public List selectByExample(ExchangeRecordExample example) throws SQLException {
        List list = sqlMapClient.queryForList("exchange_record.ibatorgenerated_selectByExample", example);
        return list;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table exchange_record
     *
     * @ibatorgenerated Fri Jul 19 17:21:54 CST 2013
     */
    public ExchangeRecord selectByPrimaryKey(Integer recordid) throws SQLException {
        ExchangeRecord key = new ExchangeRecord();
        key.setRecordid(recordid);
        ExchangeRecord record = (ExchangeRecord) sqlMapClient.queryForObject("exchange_record.ibatorgenerated_selectByPrimaryKey", key);
        return record;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table exchange_record
     *
     * @ibatorgenerated Fri Jul 19 17:21:54 CST 2013
     */
    public int updateByExampleSelective(ExchangeRecord record, ExchangeRecordExample example) throws SQLException {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = sqlMapClient.update("exchange_record.ibatorgenerated_updateByExampleSelective", parms);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table exchange_record
     *
     * @ibatorgenerated Fri Jul 19 17:21:54 CST 2013
     */
    public int updateByExample(ExchangeRecord record, ExchangeRecordExample example) throws SQLException {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = sqlMapClient.update("exchange_record.ibatorgenerated_updateByExample", parms);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table exchange_record
     *
     * @ibatorgenerated Fri Jul 19 17:21:54 CST 2013
     */
    public int updateByPrimaryKeySelective(ExchangeRecord record) throws SQLException {
        int rows = sqlMapClient.update("exchange_record.ibatorgenerated_updateByPrimaryKeySelective", record);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table exchange_record
     *
     * @ibatorgenerated Fri Jul 19 17:21:54 CST 2013
     */
    public int updateByPrimaryKey(ExchangeRecord record) throws SQLException {
        int rows = sqlMapClient.update("exchange_record.ibatorgenerated_updateByPrimaryKey", record);
        return rows;
    }

    /**
     * This class was generated by Apache iBATIS ibator.
     * This class corresponds to the database table exchange_record
     *
     * @ibatorgenerated Fri Jul 19 17:21:54 CST 2013
     */
    private static class UpdateByExampleParms extends ExchangeRecordExample {
        private Object record;

        public UpdateByExampleParms(Object record, ExchangeRecordExample example) {
            super(example);
            this.record = record;
        }

        public Object getRecord() {
            return record;
        }
    }
}