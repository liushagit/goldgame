package com.orange.goldgame.domain;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class PayInfoExample {

	/**
	 * This field was generated by Abator for iBATIS. This field corresponds to the database table pay_info
	 * @abatorgenerated  Thu Apr 17 14:51:09 CST 2014
	 */
	protected String orderByClause;
	/**
	 * This field was generated by Abator for iBATIS. This field corresponds to the database table pay_info
	 * @abatorgenerated  Thu Apr 17 14:51:09 CST 2014
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table pay_info
	 * @abatorgenerated  Thu Apr 17 14:51:09 CST 2014
	 */
	public PayInfoExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table pay_info
	 * @abatorgenerated  Thu Apr 17 14:51:09 CST 2014
	 */
	protected PayInfoExample(PayInfoExample example) {
		this.orderByClause = example.orderByClause;
		this.oredCriteria = example.oredCriteria;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table pay_info
	 * @abatorgenerated  Thu Apr 17 14:51:09 CST 2014
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table pay_info
	 * @abatorgenerated  Thu Apr 17 14:51:09 CST 2014
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table pay_info
	 * @abatorgenerated  Thu Apr 17 14:51:09 CST 2014
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table pay_info
	 * @abatorgenerated  Thu Apr 17 14:51:09 CST 2014
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table pay_info
	 * @abatorgenerated  Thu Apr 17 14:51:09 CST 2014
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table pay_info
	 * @abatorgenerated  Thu Apr 17 14:51:09 CST 2014
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table pay_info
	 * @abatorgenerated  Thu Apr 17 14:51:09 CST 2014
	 */
	public void clear() {
		oredCriteria.clear();
	}

	/**
	 * This class was generated by Abator for iBATIS. This class corresponds to the database table pay_info
	 * @abatorgenerated  Thu Apr 17 14:51:09 CST 2014
	 */
	public static class Criteria {
		protected List<String> criteriaWithoutValue;
		protected List<Map<String, Object>> criteriaWithSingleValue;
		protected List<Map<String, Object>> criteriaWithListValue;
		protected List<Map<String, Object>> criteriaWithBetweenValue;

		protected Criteria() {
			super();
			criteriaWithoutValue = new ArrayList<String>();
			criteriaWithSingleValue = new ArrayList<Map<String, Object>>();
			criteriaWithListValue = new ArrayList<Map<String, Object>>();
			criteriaWithBetweenValue = new ArrayList<Map<String, Object>>();
		}

		public boolean isValid() {
			return criteriaWithoutValue.size() > 0
					|| criteriaWithSingleValue.size() > 0
					|| criteriaWithListValue.size() > 0
					|| criteriaWithBetweenValue.size() > 0;
		}

		public List<String> getCriteriaWithoutValue() {
			return criteriaWithoutValue;
		}

		public List<Map<String, Object>> getCriteriaWithSingleValue() {
			return criteriaWithSingleValue;
		}

		public List<Map<String, Object>> getCriteriaWithListValue() {
			return criteriaWithListValue;
		}

		public List<Map<String, Object>> getCriteriaWithBetweenValue() {
			return criteriaWithBetweenValue;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteriaWithoutValue.add(condition);
		}

		protected void addCriterion(String condition, Object value,
				String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property
						+ " cannot be null");
			}
			Map<String, Object> map = new HashMap<String, Object>();
			map.put("condition", condition);
			map.put("value", value);
			criteriaWithSingleValue.add(map);
		}

		protected void addCriterion(String condition,
				List<? extends Object> values, String property) {
			if (values == null || values.size() == 0) {
				throw new RuntimeException("Value list for " + property
						+ " cannot be null or empty");
			}
			Map<String, Object> map = new HashMap<String, Object>();
			map.put("condition", condition);
			map.put("values", values);
			criteriaWithListValue.add(map);
		}

		protected void addCriterion(String condition, Object value1,
				Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property
						+ " cannot be null");
			}
			List<Object> list = new ArrayList<Object>();
			list.add(value1);
			list.add(value2);
			Map<String, Object> map = new HashMap<String, Object>();
			map.put("condition", condition);
			map.put("values", list);
			criteriaWithBetweenValue.add(map);
		}

		public Criteria andIdIsNull() {
			addCriterion("id is null");
			return this;
		}

		public Criteria andIdIsNotNull() {
			addCriterion("id is not null");
			return this;
		}

		public Criteria andIdEqualTo(Integer value) {
			addCriterion("id =", value, "id");
			return this;
		}

		public Criteria andIdNotEqualTo(Integer value) {
			addCriterion("id <>", value, "id");
			return this;
		}

		public Criteria andIdGreaterThan(Integer value) {
			addCriterion("id >", value, "id");
			return this;
		}

		public Criteria andIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("id >=", value, "id");
			return this;
		}

		public Criteria andIdLessThan(Integer value) {
			addCriterion("id <", value, "id");
			return this;
		}

		public Criteria andIdLessThanOrEqualTo(Integer value) {
			addCriterion("id <=", value, "id");
			return this;
		}

		public Criteria andIdIn(List<Integer> values) {
			addCriterion("id in", values, "id");
			return this;
		}

		public Criteria andIdNotIn(List<Integer> values) {
			addCriterion("id not in", values, "id");
			return this;
		}

		public Criteria andIdBetween(Integer value1, Integer value2) {
			addCriterion("id between", value1, value2, "id");
			return this;
		}

		public Criteria andIdNotBetween(Integer value1, Integer value2) {
			addCriterion("id not between", value1, value2, "id");
			return this;
		}

		public Criteria andPayIdIsNull() {
			addCriterion("pay_id is null");
			return this;
		}

		public Criteria andPayIdIsNotNull() {
			addCriterion("pay_id is not null");
			return this;
		}

		public Criteria andPayIdEqualTo(String value) {
			addCriterion("pay_id =", value, "payId");
			return this;
		}

		public Criteria andPayIdNotEqualTo(String value) {
			addCriterion("pay_id <>", value, "payId");
			return this;
		}

		public Criteria andPayIdGreaterThan(String value) {
			addCriterion("pay_id >", value, "payId");
			return this;
		}

		public Criteria andPayIdGreaterThanOrEqualTo(String value) {
			addCriterion("pay_id >=", value, "payId");
			return this;
		}

		public Criteria andPayIdLessThan(String value) {
			addCriterion("pay_id <", value, "payId");
			return this;
		}

		public Criteria andPayIdLessThanOrEqualTo(String value) {
			addCriterion("pay_id <=", value, "payId");
			return this;
		}

		public Criteria andPayIdLike(String value) {
			addCriterion("pay_id like", value, "payId");
			return this;
		}

		public Criteria andPayIdNotLike(String value) {
			addCriterion("pay_id not like", value, "payId");
			return this;
		}

		public Criteria andPayIdIn(List<String> values) {
			addCriterion("pay_id in", values, "payId");
			return this;
		}

		public Criteria andPayIdNotIn(List<String> values) {
			addCriterion("pay_id not in", values, "payId");
			return this;
		}

		public Criteria andPayIdBetween(String value1, String value2) {
			addCriterion("pay_id between", value1, value2, "payId");
			return this;
		}

		public Criteria andPayIdNotBetween(String value1, String value2) {
			addCriterion("pay_id not between", value1, value2, "payId");
			return this;
		}

		public Criteria andNameIsNull() {
			addCriterion("name is null");
			return this;
		}

		public Criteria andNameIsNotNull() {
			addCriterion("name is not null");
			return this;
		}

		public Criteria andNameEqualTo(String value) {
			addCriterion("name =", value, "name");
			return this;
		}

		public Criteria andNameNotEqualTo(String value) {
			addCriterion("name <>", value, "name");
			return this;
		}

		public Criteria andNameGreaterThan(String value) {
			addCriterion("name >", value, "name");
			return this;
		}

		public Criteria andNameGreaterThanOrEqualTo(String value) {
			addCriterion("name >=", value, "name");
			return this;
		}

		public Criteria andNameLessThan(String value) {
			addCriterion("name <", value, "name");
			return this;
		}

		public Criteria andNameLessThanOrEqualTo(String value) {
			addCriterion("name <=", value, "name");
			return this;
		}

		public Criteria andNameLike(String value) {
			addCriterion("name like", value, "name");
			return this;
		}

		public Criteria andNameNotLike(String value) {
			addCriterion("name not like", value, "name");
			return this;
		}

		public Criteria andNameIn(List<String> values) {
			addCriterion("name in", values, "name");
			return this;
		}

		public Criteria andNameNotIn(List<String> values) {
			addCriterion("name not in", values, "name");
			return this;
		}

		public Criteria andNameBetween(String value1, String value2) {
			addCriterion("name between", value1, value2, "name");
			return this;
		}

		public Criteria andNameNotBetween(String value1, String value2) {
			addCriterion("name not between", value1, value2, "name");
			return this;
		}

		public Criteria andMoneyIsNull() {
			addCriterion("money is null");
			return this;
		}

		public Criteria andMoneyIsNotNull() {
			addCriterion("money is not null");
			return this;
		}

		public Criteria andMoneyEqualTo(Integer value) {
			addCriterion("money =", value, "money");
			return this;
		}

		public Criteria andMoneyNotEqualTo(Integer value) {
			addCriterion("money <>", value, "money");
			return this;
		}

		public Criteria andMoneyGreaterThan(Integer value) {
			addCriterion("money >", value, "money");
			return this;
		}

		public Criteria andMoneyGreaterThanOrEqualTo(Integer value) {
			addCriterion("money >=", value, "money");
			return this;
		}

		public Criteria andMoneyLessThan(Integer value) {
			addCriterion("money <", value, "money");
			return this;
		}

		public Criteria andMoneyLessThanOrEqualTo(Integer value) {
			addCriterion("money <=", value, "money");
			return this;
		}

		public Criteria andMoneyIn(List<Integer> values) {
			addCriterion("money in", values, "money");
			return this;
		}

		public Criteria andMoneyNotIn(List<Integer> values) {
			addCriterion("money not in", values, "money");
			return this;
		}

		public Criteria andMoneyBetween(Integer value1, Integer value2) {
			addCriterion("money between", value1, value2, "money");
			return this;
		}

		public Criteria andMoneyNotBetween(Integer value1, Integer value2) {
			addCriterion("money not between", value1, value2, "money");
			return this;
		}

		public Criteria andGoldIsNull() {
			addCriterion("gold is null");
			return this;
		}

		public Criteria andGoldIsNotNull() {
			addCriterion("gold is not null");
			return this;
		}

		public Criteria andGoldEqualTo(Integer value) {
			addCriterion("gold =", value, "gold");
			return this;
		}

		public Criteria andGoldNotEqualTo(Integer value) {
			addCriterion("gold <>", value, "gold");
			return this;
		}

		public Criteria andGoldGreaterThan(Integer value) {
			addCriterion("gold >", value, "gold");
			return this;
		}

		public Criteria andGoldGreaterThanOrEqualTo(Integer value) {
			addCriterion("gold >=", value, "gold");
			return this;
		}

		public Criteria andGoldLessThan(Integer value) {
			addCriterion("gold <", value, "gold");
			return this;
		}

		public Criteria andGoldLessThanOrEqualTo(Integer value) {
			addCriterion("gold <=", value, "gold");
			return this;
		}

		public Criteria andGoldIn(List<Integer> values) {
			addCriterion("gold in", values, "gold");
			return this;
		}

		public Criteria andGoldNotIn(List<Integer> values) {
			addCriterion("gold not in", values, "gold");
			return this;
		}

		public Criteria andGoldBetween(Integer value1, Integer value2) {
			addCriterion("gold between", value1, value2, "gold");
			return this;
		}

		public Criteria andGoldNotBetween(Integer value1, Integer value2) {
			addCriterion("gold not between", value1, value2, "gold");
			return this;
		}

		public Criteria andCopperIsNull() {
			addCriterion("copper is null");
			return this;
		}

		public Criteria andCopperIsNotNull() {
			addCriterion("copper is not null");
			return this;
		}

		public Criteria andCopperEqualTo(Integer value) {
			addCriterion("copper =", value, "copper");
			return this;
		}

		public Criteria andCopperNotEqualTo(Integer value) {
			addCriterion("copper <>", value, "copper");
			return this;
		}

		public Criteria andCopperGreaterThan(Integer value) {
			addCriterion("copper >", value, "copper");
			return this;
		}

		public Criteria andCopperGreaterThanOrEqualTo(Integer value) {
			addCriterion("copper >=", value, "copper");
			return this;
		}

		public Criteria andCopperLessThan(Integer value) {
			addCriterion("copper <", value, "copper");
			return this;
		}

		public Criteria andCopperLessThanOrEqualTo(Integer value) {
			addCriterion("copper <=", value, "copper");
			return this;
		}

		public Criteria andCopperIn(List<Integer> values) {
			addCriterion("copper in", values, "copper");
			return this;
		}

		public Criteria andCopperNotIn(List<Integer> values) {
			addCriterion("copper not in", values, "copper");
			return this;
		}

		public Criteria andCopperBetween(Integer value1, Integer value2) {
			addCriterion("copper between", value1, value2, "copper");
			return this;
		}

		public Criteria andCopperNotBetween(Integer value1, Integer value2) {
			addCriterion("copper not between", value1, value2, "copper");
			return this;
		}

		public Criteria andPayTypeIsNull() {
			addCriterion("pay_type is null");
			return this;
		}

		public Criteria andPayTypeIsNotNull() {
			addCriterion("pay_type is not null");
			return this;
		}

		public Criteria andPayTypeEqualTo(Integer value) {
			addCriterion("pay_type =", value, "payType");
			return this;
		}

		public Criteria andPayTypeNotEqualTo(Integer value) {
			addCriterion("pay_type <>", value, "payType");
			return this;
		}

		public Criteria andPayTypeGreaterThan(Integer value) {
			addCriterion("pay_type >", value, "payType");
			return this;
		}

		public Criteria andPayTypeGreaterThanOrEqualTo(Integer value) {
			addCriterion("pay_type >=", value, "payType");
			return this;
		}

		public Criteria andPayTypeLessThan(Integer value) {
			addCriterion("pay_type <", value, "payType");
			return this;
		}

		public Criteria andPayTypeLessThanOrEqualTo(Integer value) {
			addCriterion("pay_type <=", value, "payType");
			return this;
		}

		public Criteria andPayTypeIn(List<Integer> values) {
			addCriterion("pay_type in", values, "payType");
			return this;
		}

		public Criteria andPayTypeNotIn(List<Integer> values) {
			addCriterion("pay_type not in", values, "payType");
			return this;
		}

		public Criteria andPayTypeBetween(Integer value1, Integer value2) {
			addCriterion("pay_type between", value1, value2, "payType");
			return this;
		}

		public Criteria andPayTypeNotBetween(Integer value1, Integer value2) {
			addCriterion("pay_type not between", value1, value2, "payType");
			return this;
		}

		public Criteria andIsPhoneIsNull() {
			addCriterion("is_phone is null");
			return this;
		}

		public Criteria andIsPhoneIsNotNull() {
			addCriterion("is_phone is not null");
			return this;
		}

		public Criteria andIsPhoneEqualTo(Integer value) {
			addCriterion("is_phone =", value, "isPhone");
			return this;
		}

		public Criteria andIsPhoneNotEqualTo(Integer value) {
			addCriterion("is_phone <>", value, "isPhone");
			return this;
		}

		public Criteria andIsPhoneGreaterThan(Integer value) {
			addCriterion("is_phone >", value, "isPhone");
			return this;
		}

		public Criteria andIsPhoneGreaterThanOrEqualTo(Integer value) {
			addCriterion("is_phone >=", value, "isPhone");
			return this;
		}

		public Criteria andIsPhoneLessThan(Integer value) {
			addCriterion("is_phone <", value, "isPhone");
			return this;
		}

		public Criteria andIsPhoneLessThanOrEqualTo(Integer value) {
			addCriterion("is_phone <=", value, "isPhone");
			return this;
		}

		public Criteria andIsPhoneIn(List<Integer> values) {
			addCriterion("is_phone in", values, "isPhone");
			return this;
		}

		public Criteria andIsPhoneNotIn(List<Integer> values) {
			addCriterion("is_phone not in", values, "isPhone");
			return this;
		}

		public Criteria andIsPhoneBetween(Integer value1, Integer value2) {
			addCriterion("is_phone between", value1, value2, "isPhone");
			return this;
		}

		public Criteria andIsPhoneNotBetween(Integer value1, Integer value2) {
			addCriterion("is_phone not between", value1, value2, "isPhone");
			return this;
		}

		public Criteria andYoumengIsNull() {
			addCriterion("youmeng is null");
			return this;
		}

		public Criteria andYoumengIsNotNull() {
			addCriterion("youmeng is not null");
			return this;
		}

		public Criteria andYoumengEqualTo(Integer value) {
			addCriterion("youmeng =", value, "youmeng");
			return this;
		}

		public Criteria andYoumengNotEqualTo(Integer value) {
			addCriterion("youmeng <>", value, "youmeng");
			return this;
		}

		public Criteria andYoumengGreaterThan(Integer value) {
			addCriterion("youmeng >", value, "youmeng");
			return this;
		}

		public Criteria andYoumengGreaterThanOrEqualTo(Integer value) {
			addCriterion("youmeng >=", value, "youmeng");
			return this;
		}

		public Criteria andYoumengLessThan(Integer value) {
			addCriterion("youmeng <", value, "youmeng");
			return this;
		}

		public Criteria andYoumengLessThanOrEqualTo(Integer value) {
			addCriterion("youmeng <=", value, "youmeng");
			return this;
		}

		public Criteria andYoumengIn(List<Integer> values) {
			addCriterion("youmeng in", values, "youmeng");
			return this;
		}

		public Criteria andYoumengNotIn(List<Integer> values) {
			addCriterion("youmeng not in", values, "youmeng");
			return this;
		}

		public Criteria andYoumengBetween(Integer value1, Integer value2) {
			addCriterion("youmeng between", value1, value2, "youmeng");
			return this;
		}

		public Criteria andYoumengNotBetween(Integer value1, Integer value2) {
			addCriterion("youmeng not between", value1, value2, "youmeng");
			return this;
		}

		public Criteria andActivityTypeIsNull() {
			addCriterion("activity_type is null");
			return this;
		}

		public Criteria andActivityTypeIsNotNull() {
			addCriterion("activity_type is not null");
			return this;
		}

		public Criteria andActivityTypeEqualTo(Integer value) {
			addCriterion("activity_type =", value, "activityType");
			return this;
		}

		public Criteria andActivityTypeNotEqualTo(Integer value) {
			addCriterion("activity_type <>", value, "activityType");
			return this;
		}

		public Criteria andActivityTypeGreaterThan(Integer value) {
			addCriterion("activity_type >", value, "activityType");
			return this;
		}

		public Criteria andActivityTypeGreaterThanOrEqualTo(Integer value) {
			addCriterion("activity_type >=", value, "activityType");
			return this;
		}

		public Criteria andActivityTypeLessThan(Integer value) {
			addCriterion("activity_type <", value, "activityType");
			return this;
		}

		public Criteria andActivityTypeLessThanOrEqualTo(Integer value) {
			addCriterion("activity_type <=", value, "activityType");
			return this;
		}

		public Criteria andActivityTypeIn(List<Integer> values) {
			addCriterion("activity_type in", values, "activityType");
			return this;
		}

		public Criteria andActivityTypeNotIn(List<Integer> values) {
			addCriterion("activity_type not in", values, "activityType");
			return this;
		}

		public Criteria andActivityTypeBetween(Integer value1, Integer value2) {
			addCriterion("activity_type between", value1, value2,
					"activityType");
			return this;
		}

		public Criteria andActivityTypeNotBetween(Integer value1, Integer value2) {
			addCriterion("activity_type not between", value1, value2,
					"activityType");
			return this;
		}

		public Criteria andPayProTypeIsNull() {
			addCriterion("pay_pro_type is null");
			return this;
		}

		public Criteria andPayProTypeIsNotNull() {
			addCriterion("pay_pro_type is not null");
			return this;
		}

		public Criteria andPayProTypeEqualTo(Integer value) {
			addCriterion("pay_pro_type =", value, "payProType");
			return this;
		}

		public Criteria andPayProTypeNotEqualTo(Integer value) {
			addCriterion("pay_pro_type <>", value, "payProType");
			return this;
		}

		public Criteria andPayProTypeGreaterThan(Integer value) {
			addCriterion("pay_pro_type >", value, "payProType");
			return this;
		}

		public Criteria andPayProTypeGreaterThanOrEqualTo(Integer value) {
			addCriterion("pay_pro_type >=", value, "payProType");
			return this;
		}

		public Criteria andPayProTypeLessThan(Integer value) {
			addCriterion("pay_pro_type <", value, "payProType");
			return this;
		}

		public Criteria andPayProTypeLessThanOrEqualTo(Integer value) {
			addCriterion("pay_pro_type <=", value, "payProType");
			return this;
		}

		public Criteria andPayProTypeIn(List<Integer> values) {
			addCriterion("pay_pro_type in", values, "payProType");
			return this;
		}

		public Criteria andPayProTypeNotIn(List<Integer> values) {
			addCriterion("pay_pro_type not in", values, "payProType");
			return this;
		}

		public Criteria andPayProTypeBetween(Integer value1, Integer value2) {
			addCriterion("pay_pro_type between", value1, value2, "payProType");
			return this;
		}

		public Criteria andPayProTypeNotBetween(Integer value1, Integer value2) {
			addCriterion("pay_pro_type not between", value1, value2,
					"payProType");
			return this;
		}
	}
}