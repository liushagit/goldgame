package com.orange.goldgame.domain;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class StakeConfigExample {

	/**
	 * This field was generated by Apache iBATIS ibator. This field corresponds to the database table stake_config
	 * @ibatorgenerated  Thu Jul 11 15:56:09 CST 2013
	 */
	protected String orderByClause;
	/**
	 * This field was generated by Apache iBATIS ibator. This field corresponds to the database table stake_config
	 * @ibatorgenerated  Thu Jul 11 15:56:09 CST 2013
	 */
	protected List oredCriteria;

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table stake_config
	 * @ibatorgenerated  Thu Jul 11 15:56:09 CST 2013
	 */
	public StakeConfigExample() {
		oredCriteria = new ArrayList();
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table stake_config
	 * @ibatorgenerated  Thu Jul 11 15:56:09 CST 2013
	 */
	protected StakeConfigExample(StakeConfigExample example) {
		this.orderByClause = example.orderByClause;
		this.oredCriteria = example.oredCriteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table stake_config
	 * @ibatorgenerated  Thu Jul 11 15:56:09 CST 2013
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table stake_config
	 * @ibatorgenerated  Thu Jul 11 15:56:09 CST 2013
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table stake_config
	 * @ibatorgenerated  Thu Jul 11 15:56:09 CST 2013
	 */
	public List getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table stake_config
	 * @ibatorgenerated  Thu Jul 11 15:56:09 CST 2013
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table stake_config
	 * @ibatorgenerated  Thu Jul 11 15:56:09 CST 2013
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table stake_config
	 * @ibatorgenerated  Thu Jul 11 15:56:09 CST 2013
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table stake_config
	 * @ibatorgenerated  Thu Jul 11 15:56:09 CST 2013
	 */
	public void clear() {
		oredCriteria.clear();
	}

	/**
	 * This class was generated by Apache iBATIS ibator. This class corresponds to the database table stake_config
	 * @ibatorgenerated  Thu Jul 11 15:56:09 CST 2013
	 */
	public static class Criteria {
		protected List criteriaWithoutValue;
		protected List criteriaWithSingleValue;
		protected List criteriaWithListValue;
		protected List criteriaWithBetweenValue;

		protected Criteria() {
			super();
			criteriaWithoutValue = new ArrayList();
			criteriaWithSingleValue = new ArrayList();
			criteriaWithListValue = new ArrayList();
			criteriaWithBetweenValue = new ArrayList();
		}

		public boolean isValid() {
			return criteriaWithoutValue.size() > 0
					|| criteriaWithSingleValue.size() > 0
					|| criteriaWithListValue.size() > 0
					|| criteriaWithBetweenValue.size() > 0;
		}

		public List getCriteriaWithoutValue() {
			return criteriaWithoutValue;
		}

		public List getCriteriaWithSingleValue() {
			return criteriaWithSingleValue;
		}

		public List getCriteriaWithListValue() {
			return criteriaWithListValue;
		}

		public List getCriteriaWithBetweenValue() {
			return criteriaWithBetweenValue;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteriaWithoutValue.add(condition);
		}

		protected void addCriterion(String condition, Object value,
				String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property
						+ " cannot be null");
			}
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("value", value);
			criteriaWithSingleValue.add(map);
		}

		protected void addCriterion(String condition, List values,
				String property) {
			if (values == null || values.size() == 0) {
				throw new RuntimeException("Value list for " + property
						+ " cannot be null or empty");
			}
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("values", values);
			criteriaWithListValue.add(map);
		}

		protected void addCriterion(String condition, Object value1,
				Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property
						+ " cannot be null");
			}
			List list = new ArrayList();
			list.add(value1);
			list.add(value2);
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("values", list);
			criteriaWithBetweenValue.add(map);
		}

		public Criteria andIdIsNull() {
			addCriterion("Id is null");
			return this;
		}

		public Criteria andIdIsNotNull() {
			addCriterion("Id is not null");
			return this;
		}

		public Criteria andIdEqualTo(Integer value) {
			addCriterion("Id =", value, "id");
			return this;
		}

		public Criteria andIdNotEqualTo(Integer value) {
			addCriterion("Id <>", value, "id");
			return this;
		}

		public Criteria andIdGreaterThan(Integer value) {
			addCriterion("Id >", value, "id");
			return this;
		}

		public Criteria andIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("Id >=", value, "id");
			return this;
		}

		public Criteria andIdLessThan(Integer value) {
			addCriterion("Id <", value, "id");
			return this;
		}

		public Criteria andIdLessThanOrEqualTo(Integer value) {
			addCriterion("Id <=", value, "id");
			return this;
		}

		public Criteria andIdIn(List values) {
			addCriterion("Id in", values, "id");
			return this;
		}

		public Criteria andIdNotIn(List values) {
			addCriterion("Id not in", values, "id");
			return this;
		}

		public Criteria andIdBetween(Integer value1, Integer value2) {
			addCriterion("Id between", value1, value2, "id");
			return this;
		}

		public Criteria andIdNotBetween(Integer value1, Integer value2) {
			addCriterion("Id not between", value1, value2, "id");
			return this;
		}

		public Criteria andAreaIdIsNull() {
			addCriterion("area_Id is null");
			return this;
		}

		public Criteria andAreaIdIsNotNull() {
			addCriterion("area_Id is not null");
			return this;
		}

		public Criteria andAreaIdEqualTo(Integer value) {
			addCriterion("area_Id =", value, "areaId");
			return this;
		}

		public Criteria andAreaIdNotEqualTo(Integer value) {
			addCriterion("area_Id <>", value, "areaId");
			return this;
		}

		public Criteria andAreaIdGreaterThan(Integer value) {
			addCriterion("area_Id >", value, "areaId");
			return this;
		}

		public Criteria andAreaIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("area_Id >=", value, "areaId");
			return this;
		}

		public Criteria andAreaIdLessThan(Integer value) {
			addCriterion("area_Id <", value, "areaId");
			return this;
		}

		public Criteria andAreaIdLessThanOrEqualTo(Integer value) {
			addCriterion("area_Id <=", value, "areaId");
			return this;
		}

		public Criteria andAreaIdIn(List values) {
			addCriterion("area_Id in", values, "areaId");
			return this;
		}

		public Criteria andAreaIdNotIn(List values) {
			addCriterion("area_Id not in", values, "areaId");
			return this;
		}

		public Criteria andAreaIdBetween(Integer value1, Integer value2) {
			addCriterion("area_Id between", value1, value2, "areaId");
			return this;
		}

		public Criteria andAreaIdNotBetween(Integer value1, Integer value2) {
			addCriterion("area_Id not between", value1, value2, "areaId");
			return this;
		}

		public Criteria andStakeNumberIsNull() {
			addCriterion("stake_Number is null");
			return this;
		}

		public Criteria andStakeNumberIsNotNull() {
			addCriterion("stake_Number is not null");
			return this;
		}

		public Criteria andStakeNumberEqualTo(Integer value) {
			addCriterion("stake_Number =", value, "stakeNumber");
			return this;
		}

		public Criteria andStakeNumberNotEqualTo(Integer value) {
			addCriterion("stake_Number <>", value, "stakeNumber");
			return this;
		}

		public Criteria andStakeNumberGreaterThan(Integer value) {
			addCriterion("stake_Number >", value, "stakeNumber");
			return this;
		}

		public Criteria andStakeNumberGreaterThanOrEqualTo(Integer value) {
			addCriterion("stake_Number >=", value, "stakeNumber");
			return this;
		}

		public Criteria andStakeNumberLessThan(Integer value) {
			addCriterion("stake_Number <", value, "stakeNumber");
			return this;
		}

		public Criteria andStakeNumberLessThanOrEqualTo(Integer value) {
			addCriterion("stake_Number <=", value, "stakeNumber");
			return this;
		}

		public Criteria andStakeNumberIn(List values) {
			addCriterion("stake_Number in", values, "stakeNumber");
			return this;
		}

		public Criteria andStakeNumberNotIn(List values) {
			addCriterion("stake_Number not in", values, "stakeNumber");
			return this;
		}

		public Criteria andStakeNumberBetween(Integer value1, Integer value2) {
			addCriterion("stake_Number between", value1, value2, "stakeNumber");
			return this;
		}

		public Criteria andStakeNumberNotBetween(Integer value1, Integer value2) {
			addCriterion("stake_Number not between", value1, value2,
					"stakeNumber");
			return this;
		}

		public Criteria andIntroIsNull() {
			addCriterion("intro is null");
			return this;
		}

		public Criteria andIntroIsNotNull() {
			addCriterion("intro is not null");
			return this;
		}

		public Criteria andIntroEqualTo(String value) {
			addCriterion("intro =", value, "intro");
			return this;
		}

		public Criteria andIntroNotEqualTo(String value) {
			addCriterion("intro <>", value, "intro");
			return this;
		}

		public Criteria andIntroGreaterThan(String value) {
			addCriterion("intro >", value, "intro");
			return this;
		}

		public Criteria andIntroGreaterThanOrEqualTo(String value) {
			addCriterion("intro >=", value, "intro");
			return this;
		}

		public Criteria andIntroLessThan(String value) {
			addCriterion("intro <", value, "intro");
			return this;
		}

		public Criteria andIntroLessThanOrEqualTo(String value) {
			addCriterion("intro <=", value, "intro");
			return this;
		}

		public Criteria andIntroLike(String value) {
			addCriterion("intro like", value, "intro");
			return this;
		}

		public Criteria andIntroNotLike(String value) {
			addCriterion("intro not like", value, "intro");
			return this;
		}

		public Criteria andIntroIn(List values) {
			addCriterion("intro in", values, "intro");
			return this;
		}

		public Criteria andIntroNotIn(List values) {
			addCriterion("intro not in", values, "intro");
			return this;
		}

		public Criteria andIntroBetween(String value1, String value2) {
			addCriterion("intro between", value1, value2, "intro");
			return this;
		}

		public Criteria andIntroNotBetween(String value1, String value2) {
			addCriterion("intro not between", value1, value2, "intro");
			return this;
		}
	}
}