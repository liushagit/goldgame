package com.orange.goldgame.domain;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class AppellationConfigExample {
    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table appellation_config
     *
     * @ibatorgenerated Mon Aug 26 10:43:53 CST 2013
     */
    protected String orderByClause;

    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table appellation_config
     *
     * @ibatorgenerated Mon Aug 26 10:43:53 CST 2013
     */
    protected List oredCriteria;

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table appellation_config
     *
     * @ibatorgenerated Mon Aug 26 10:43:53 CST 2013
     */
    public AppellationConfigExample() {
        oredCriteria = new ArrayList();
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table appellation_config
     *
     * @ibatorgenerated Mon Aug 26 10:43:53 CST 2013
     */
    protected AppellationConfigExample(AppellationConfigExample example) {
        this.orderByClause = example.orderByClause;
        this.oredCriteria = example.oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table appellation_config
     *
     * @ibatorgenerated Mon Aug 26 10:43:53 CST 2013
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table appellation_config
     *
     * @ibatorgenerated Mon Aug 26 10:43:53 CST 2013
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table appellation_config
     *
     * @ibatorgenerated Mon Aug 26 10:43:53 CST 2013
     */
    public List getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table appellation_config
     *
     * @ibatorgenerated Mon Aug 26 10:43:53 CST 2013
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table appellation_config
     *
     * @ibatorgenerated Mon Aug 26 10:43:53 CST 2013
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table appellation_config
     *
     * @ibatorgenerated Mon Aug 26 10:43:53 CST 2013
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table appellation_config
     *
     * @ibatorgenerated Mon Aug 26 10:43:53 CST 2013
     */
    public void clear() {
        oredCriteria.clear();
    }

    /**
     * This class was generated by Apache iBATIS ibator.
     * This class corresponds to the database table appellation_config
     *
     * @ibatorgenerated Mon Aug 26 10:43:53 CST 2013
     */
    public static class Criteria {
        protected List criteriaWithoutValue;

        protected List criteriaWithSingleValue;

        protected List criteriaWithListValue;

        protected List criteriaWithBetweenValue;

        protected Criteria() {
            super();
            criteriaWithoutValue = new ArrayList();
            criteriaWithSingleValue = new ArrayList();
            criteriaWithListValue = new ArrayList();
            criteriaWithBetweenValue = new ArrayList();
        }

        public boolean isValid() {
            return criteriaWithoutValue.size() > 0
                || criteriaWithSingleValue.size() > 0
                || criteriaWithListValue.size() > 0
                || criteriaWithBetweenValue.size() > 0;
        }

        public List getCriteriaWithoutValue() {
            return criteriaWithoutValue;
        }

        public List getCriteriaWithSingleValue() {
            return criteriaWithSingleValue;
        }

        public List getCriteriaWithListValue() {
            return criteriaWithListValue;
        }

        public List getCriteriaWithBetweenValue() {
            return criteriaWithBetweenValue;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteriaWithoutValue.add(condition);
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("value", value);
            criteriaWithSingleValue.add(map);
        }

        protected void addCriterion(String condition, List values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("values", values);
            criteriaWithListValue.add(map);
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            List list = new ArrayList();
            list.add(value1);
            list.add(value2);
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("values", list);
            criteriaWithBetweenValue.add(map);
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("id =", value, "id");
            return this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("id <>", value, "id");
            return this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("id >", value, "id");
            return this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("id >=", value, "id");
            return this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("id <", value, "id");
            return this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("id <=", value, "id");
            return this;
        }

        public Criteria andIdIn(List values) {
            addCriterion("id in", values, "id");
            return this;
        }

        public Criteria andIdNotIn(List values) {
            addCriterion("id not in", values, "id");
            return this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("id between", value1, value2, "id");
            return this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("id not between", value1, value2, "id");
            return this;
        }

        public Criteria andAmountIsNull() {
            addCriterion("amount is null");
            return this;
        }

        public Criteria andAmountIsNotNull() {
            addCriterion("amount is not null");
            return this;
        }

        public Criteria andAmountEqualTo(Integer value) {
            addCriterion("amount =", value, "amount");
            return this;
        }

        public Criteria andAmountNotEqualTo(Integer value) {
            addCriterion("amount <>", value, "amount");
            return this;
        }

        public Criteria andAmountGreaterThan(Integer value) {
            addCriterion("amount >", value, "amount");
            return this;
        }

        public Criteria andAmountGreaterThanOrEqualTo(Integer value) {
            addCriterion("amount >=", value, "amount");
            return this;
        }

        public Criteria andAmountLessThan(Integer value) {
            addCriterion("amount <", value, "amount");
            return this;
        }

        public Criteria andAmountLessThanOrEqualTo(Integer value) {
            addCriterion("amount <=", value, "amount");
            return this;
        }

        public Criteria andAmountIn(List values) {
            addCriterion("amount in", values, "amount");
            return this;
        }

        public Criteria andAmountNotIn(List values) {
            addCriterion("amount not in", values, "amount");
            return this;
        }

        public Criteria andAmountBetween(Integer value1, Integer value2) {
            addCriterion("amount between", value1, value2, "amount");
            return this;
        }

        public Criteria andAmountNotBetween(Integer value1, Integer value2) {
            addCriterion("amount not between", value1, value2, "amount");
            return this;
        }

        public Criteria andAppellationNameIsNull() {
            addCriterion("appellation_name is null");
            return this;
        }

        public Criteria andAppellationNameIsNotNull() {
            addCriterion("appellation_name is not null");
            return this;
        }

        public Criteria andAppellationNameEqualTo(String value) {
            addCriterion("appellation_name =", value, "appellationName");
            return this;
        }

        public Criteria andAppellationNameNotEqualTo(String value) {
            addCriterion("appellation_name <>", value, "appellationName");
            return this;
        }

        public Criteria andAppellationNameGreaterThan(String value) {
            addCriterion("appellation_name >", value, "appellationName");
            return this;
        }

        public Criteria andAppellationNameGreaterThanOrEqualTo(String value) {
            addCriterion("appellation_name >=", value, "appellationName");
            return this;
        }

        public Criteria andAppellationNameLessThan(String value) {
            addCriterion("appellation_name <", value, "appellationName");
            return this;
        }

        public Criteria andAppellationNameLessThanOrEqualTo(String value) {
            addCriterion("appellation_name <=", value, "appellationName");
            return this;
        }

        public Criteria andAppellationNameLike(String value) {
            addCriterion("appellation_name like", value, "appellationName");
            return this;
        }

        public Criteria andAppellationNameNotLike(String value) {
            addCriterion("appellation_name not like", value, "appellationName");
            return this;
        }

        public Criteria andAppellationNameIn(List values) {
            addCriterion("appellation_name in", values, "appellationName");
            return this;
        }

        public Criteria andAppellationNameNotIn(List values) {
            addCriterion("appellation_name not in", values, "appellationName");
            return this;
        }

        public Criteria andAppellationNameBetween(String value1, String value2) {
            addCriterion("appellation_name between", value1, value2, "appellationName");
            return this;
        }

        public Criteria andAppellationNameNotBetween(String value1, String value2) {
            addCriterion("appellation_name not between", value1, value2, "appellationName");
            return this;
        }
    }
}