package com.orange.goldgame.domain;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class PlayerTalkExample {

	/**
	 * This field was generated by Apache iBATIS ibator. This field corresponds to the database table player_talk
	 * @ibatorgenerated  Fri Nov 15 14:06:05 CST 2013
	 */
	protected String orderByClause;
	/**
	 * This field was generated by Apache iBATIS ibator. This field corresponds to the database table player_talk
	 * @ibatorgenerated  Fri Nov 15 14:06:05 CST 2013
	 */
	protected List oredCriteria;

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table player_talk
	 * @ibatorgenerated  Fri Nov 15 14:06:05 CST 2013
	 */
	public PlayerTalkExample() {
		oredCriteria = new ArrayList();
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table player_talk
	 * @ibatorgenerated  Fri Nov 15 14:06:05 CST 2013
	 */
	protected PlayerTalkExample(PlayerTalkExample example) {
		this.orderByClause = example.orderByClause;
		this.oredCriteria = example.oredCriteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table player_talk
	 * @ibatorgenerated  Fri Nov 15 14:06:05 CST 2013
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table player_talk
	 * @ibatorgenerated  Fri Nov 15 14:06:05 CST 2013
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table player_talk
	 * @ibatorgenerated  Fri Nov 15 14:06:05 CST 2013
	 */
	public List getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table player_talk
	 * @ibatorgenerated  Fri Nov 15 14:06:05 CST 2013
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table player_talk
	 * @ibatorgenerated  Fri Nov 15 14:06:05 CST 2013
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table player_talk
	 * @ibatorgenerated  Fri Nov 15 14:06:05 CST 2013
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table player_talk
	 * @ibatorgenerated  Fri Nov 15 14:06:05 CST 2013
	 */
	public void clear() {
		oredCriteria.clear();
	}

	/**
	 * This class was generated by Apache iBATIS ibator. This class corresponds to the database table player_talk
	 * @ibatorgenerated  Fri Nov 15 14:06:05 CST 2013
	 */
	public static class Criteria {
		protected List criteriaWithoutValue;
		protected List criteriaWithSingleValue;
		protected List criteriaWithListValue;
		protected List criteriaWithBetweenValue;

		protected Criteria() {
			super();
			criteriaWithoutValue = new ArrayList();
			criteriaWithSingleValue = new ArrayList();
			criteriaWithListValue = new ArrayList();
			criteriaWithBetweenValue = new ArrayList();
		}

		public boolean isValid() {
			return criteriaWithoutValue.size() > 0
					|| criteriaWithSingleValue.size() > 0
					|| criteriaWithListValue.size() > 0
					|| criteriaWithBetweenValue.size() > 0;
		}

		public List getCriteriaWithoutValue() {
			return criteriaWithoutValue;
		}

		public List getCriteriaWithSingleValue() {
			return criteriaWithSingleValue;
		}

		public List getCriteriaWithListValue() {
			return criteriaWithListValue;
		}

		public List getCriteriaWithBetweenValue() {
			return criteriaWithBetweenValue;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteriaWithoutValue.add(condition);
		}

		protected void addCriterion(String condition, Object value,
				String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property
						+ " cannot be null");
			}
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("value", value);
			criteriaWithSingleValue.add(map);
		}

		protected void addCriterion(String condition, List values,
				String property) {
			if (values == null || values.size() == 0) {
				throw new RuntimeException("Value list for " + property
						+ " cannot be null or empty");
			}
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("values", values);
			criteriaWithListValue.add(map);
		}

		protected void addCriterion(String condition, Object value1,
				Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property
						+ " cannot be null");
			}
			List list = new ArrayList();
			list.add(value1);
			list.add(value2);
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("values", list);
			criteriaWithBetweenValue.add(map);
		}

		public Criteria andIdIsNull() {
			addCriterion("id is null");
			return this;
		}

		public Criteria andIdIsNotNull() {
			addCriterion("id is not null");
			return this;
		}

		public Criteria andIdEqualTo(Integer value) {
			addCriterion("id =", value, "id");
			return this;
		}

		public Criteria andIdNotEqualTo(Integer value) {
			addCriterion("id <>", value, "id");
			return this;
		}

		public Criteria andIdGreaterThan(Integer value) {
			addCriterion("id >", value, "id");
			return this;
		}

		public Criteria andIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("id >=", value, "id");
			return this;
		}

		public Criteria andIdLessThan(Integer value) {
			addCriterion("id <", value, "id");
			return this;
		}

		public Criteria andIdLessThanOrEqualTo(Integer value) {
			addCriterion("id <=", value, "id");
			return this;
		}

		public Criteria andIdIn(List values) {
			addCriterion("id in", values, "id");
			return this;
		}

		public Criteria andIdNotIn(List values) {
			addCriterion("id not in", values, "id");
			return this;
		}

		public Criteria andIdBetween(Integer value1, Integer value2) {
			addCriterion("id between", value1, value2, "id");
			return this;
		}

		public Criteria andIdNotBetween(Integer value1, Integer value2) {
			addCriterion("id not between", value1, value2, "id");
			return this;
		}

		public Criteria andPlayerIdIsNull() {
			addCriterion("player_id is null");
			return this;
		}

		public Criteria andPlayerIdIsNotNull() {
			addCriterion("player_id is not null");
			return this;
		}

		public Criteria andPlayerIdEqualTo(Integer value) {
			addCriterion("player_id =", value, "playerId");
			return this;
		}

		public Criteria andPlayerIdNotEqualTo(Integer value) {
			addCriterion("player_id <>", value, "playerId");
			return this;
		}

		public Criteria andPlayerIdGreaterThan(Integer value) {
			addCriterion("player_id >", value, "playerId");
			return this;
		}

		public Criteria andPlayerIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("player_id >=", value, "playerId");
			return this;
		}

		public Criteria andPlayerIdLessThan(Integer value) {
			addCriterion("player_id <", value, "playerId");
			return this;
		}

		public Criteria andPlayerIdLessThanOrEqualTo(Integer value) {
			addCriterion("player_id <=", value, "playerId");
			return this;
		}

		public Criteria andPlayerIdIn(List values) {
			addCriterion("player_id in", values, "playerId");
			return this;
		}

		public Criteria andPlayerIdNotIn(List values) {
			addCriterion("player_id not in", values, "playerId");
			return this;
		}

		public Criteria andPlayerIdBetween(Integer value1, Integer value2) {
			addCriterion("player_id between", value1, value2, "playerId");
			return this;
		}

		public Criteria andPlayerIdNotBetween(Integer value1, Integer value2) {
			addCriterion("player_id not between", value1, value2, "playerId");
			return this;
		}

		public Criteria andTalkMsgIsNull() {
			addCriterion("talk_msg is null");
			return this;
		}

		public Criteria andTalkMsgIsNotNull() {
			addCriterion("talk_msg is not null");
			return this;
		}

		public Criteria andTalkMsgEqualTo(String value) {
			addCriterion("talk_msg =", value, "talkMsg");
			return this;
		}

		public Criteria andTalkMsgNotEqualTo(String value) {
			addCriterion("talk_msg <>", value, "talkMsg");
			return this;
		}

		public Criteria andTalkMsgGreaterThan(String value) {
			addCriterion("talk_msg >", value, "talkMsg");
			return this;
		}

		public Criteria andTalkMsgGreaterThanOrEqualTo(String value) {
			addCriterion("talk_msg >=", value, "talkMsg");
			return this;
		}

		public Criteria andTalkMsgLessThan(String value) {
			addCriterion("talk_msg <", value, "talkMsg");
			return this;
		}

		public Criteria andTalkMsgLessThanOrEqualTo(String value) {
			addCriterion("talk_msg <=", value, "talkMsg");
			return this;
		}

		public Criteria andTalkMsgLike(String value) {
			addCriterion("talk_msg like", value, "talkMsg");
			return this;
		}

		public Criteria andTalkMsgNotLike(String value) {
			addCriterion("talk_msg not like", value, "talkMsg");
			return this;
		}

		public Criteria andTalkMsgIn(List values) {
			addCriterion("talk_msg in", values, "talkMsg");
			return this;
		}

		public Criteria andTalkMsgNotIn(List values) {
			addCriterion("talk_msg not in", values, "talkMsg");
			return this;
		}

		public Criteria andTalkMsgBetween(String value1, String value2) {
			addCriterion("talk_msg between", value1, value2, "talkMsg");
			return this;
		}

		public Criteria andTalkMsgNotBetween(String value1, String value2) {
			addCriterion("talk_msg not between", value1, value2, "talkMsg");
			return this;
		}

		public Criteria andTalkTypeIsNull() {
			addCriterion("talk_type is null");
			return this;
		}

		public Criteria andTalkTypeIsNotNull() {
			addCriterion("talk_type is not null");
			return this;
		}

		public Criteria andTalkTypeEqualTo(Byte value) {
			addCriterion("talk_type =", value, "talkType");
			return this;
		}

		public Criteria andTalkTypeNotEqualTo(Byte value) {
			addCriterion("talk_type <>", value, "talkType");
			return this;
		}

		public Criteria andTalkTypeGreaterThan(Byte value) {
			addCriterion("talk_type >", value, "talkType");
			return this;
		}

		public Criteria andTalkTypeGreaterThanOrEqualTo(Byte value) {
			addCriterion("talk_type >=", value, "talkType");
			return this;
		}

		public Criteria andTalkTypeLessThan(Byte value) {
			addCriterion("talk_type <", value, "talkType");
			return this;
		}

		public Criteria andTalkTypeLessThanOrEqualTo(Byte value) {
			addCriterion("talk_type <=", value, "talkType");
			return this;
		}

		public Criteria andTalkTypeIn(List values) {
			addCriterion("talk_type in", values, "talkType");
			return this;
		}

		public Criteria andTalkTypeNotIn(List values) {
			addCriterion("talk_type not in", values, "talkType");
			return this;
		}

		public Criteria andTalkTypeBetween(Byte value1, Byte value2) {
			addCriterion("talk_type between", value1, value2, "talkType");
			return this;
		}

		public Criteria andTalkTypeNotBetween(Byte value1, Byte value2) {
			addCriterion("talk_type not between", value1, value2, "talkType");
			return this;
		}

		public Criteria andTalkTimeIsNull() {
			addCriterion("talk_time is null");
			return this;
		}

		public Criteria andTalkTimeIsNotNull() {
			addCriterion("talk_time is not null");
			return this;
		}

		public Criteria andTalkTimeEqualTo(Date value) {
			addCriterion("talk_time =", value, "talkTime");
			return this;
		}

		public Criteria andTalkTimeNotEqualTo(Date value) {
			addCriterion("talk_time <>", value, "talkTime");
			return this;
		}

		public Criteria andTalkTimeGreaterThan(Date value) {
			addCriterion("talk_time >", value, "talkTime");
			return this;
		}

		public Criteria andTalkTimeGreaterThanOrEqualTo(Date value) {
			addCriterion("talk_time >=", value, "talkTime");
			return this;
		}

		public Criteria andTalkTimeLessThan(Date value) {
			addCriterion("talk_time <", value, "talkTime");
			return this;
		}

		public Criteria andTalkTimeLessThanOrEqualTo(Date value) {
			addCriterion("talk_time <=", value, "talkTime");
			return this;
		}

		public Criteria andTalkTimeIn(List values) {
			addCriterion("talk_time in", values, "talkTime");
			return this;
		}

		public Criteria andTalkTimeNotIn(List values) {
			addCriterion("talk_time not in", values, "talkTime");
			return this;
		}

		public Criteria andTalkTimeBetween(Date value1, Date value2) {
			addCriterion("talk_time between", value1, value2, "talkTime");
			return this;
		}

		public Criteria andTalkTimeNotBetween(Date value1, Date value2) {
			addCriterion("talk_time not between", value1, value2, "talkTime");
			return this;
		}
	}
}