package com.orange.goldgame.domain;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class PlayerWheelRecoderExample {

	/**
	 * This field was generated by Abator for iBATIS. This field corresponds to the database table player_wheel_recoder
	 * @abatorgenerated  Mon Mar 31 13:53:50 CST 2014
	 */
	protected String orderByClause;
	/**
	 * This field was generated by Abator for iBATIS. This field corresponds to the database table player_wheel_recoder
	 * @abatorgenerated  Mon Mar 31 13:53:50 CST 2014
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table player_wheel_recoder
	 * @abatorgenerated  Mon Mar 31 13:53:50 CST 2014
	 */
	public PlayerWheelRecoderExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table player_wheel_recoder
	 * @abatorgenerated  Mon Mar 31 13:53:50 CST 2014
	 */
	protected PlayerWheelRecoderExample(PlayerWheelRecoderExample example) {
		this.orderByClause = example.orderByClause;
		this.oredCriteria = example.oredCriteria;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table player_wheel_recoder
	 * @abatorgenerated  Mon Mar 31 13:53:50 CST 2014
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table player_wheel_recoder
	 * @abatorgenerated  Mon Mar 31 13:53:50 CST 2014
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table player_wheel_recoder
	 * @abatorgenerated  Mon Mar 31 13:53:50 CST 2014
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table player_wheel_recoder
	 * @abatorgenerated  Mon Mar 31 13:53:50 CST 2014
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table player_wheel_recoder
	 * @abatorgenerated  Mon Mar 31 13:53:50 CST 2014
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table player_wheel_recoder
	 * @abatorgenerated  Mon Mar 31 13:53:50 CST 2014
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table player_wheel_recoder
	 * @abatorgenerated  Mon Mar 31 13:53:50 CST 2014
	 */
	public void clear() {
		oredCriteria.clear();
	}

	/**
	 * This class was generated by Abator for iBATIS. This class corresponds to the database table player_wheel_recoder
	 * @abatorgenerated  Mon Mar 31 13:53:50 CST 2014
	 */
	public static class Criteria {
		protected List<String> criteriaWithoutValue;
		protected List<Map<String, Object>> criteriaWithSingleValue;
		protected List<Map<String, Object>> criteriaWithListValue;
		protected List<Map<String, Object>> criteriaWithBetweenValue;

		protected Criteria() {
			super();
			criteriaWithoutValue = new ArrayList<String>();
			criteriaWithSingleValue = new ArrayList<Map<String, Object>>();
			criteriaWithListValue = new ArrayList<Map<String, Object>>();
			criteriaWithBetweenValue = new ArrayList<Map<String, Object>>();
		}

		public boolean isValid() {
			return criteriaWithoutValue.size() > 0
					|| criteriaWithSingleValue.size() > 0
					|| criteriaWithListValue.size() > 0
					|| criteriaWithBetweenValue.size() > 0;
		}

		public List<String> getCriteriaWithoutValue() {
			return criteriaWithoutValue;
		}

		public List<Map<String, Object>> getCriteriaWithSingleValue() {
			return criteriaWithSingleValue;
		}

		public List<Map<String, Object>> getCriteriaWithListValue() {
			return criteriaWithListValue;
		}

		public List<Map<String, Object>> getCriteriaWithBetweenValue() {
			return criteriaWithBetweenValue;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteriaWithoutValue.add(condition);
		}

		protected void addCriterion(String condition, Object value,
				String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property
						+ " cannot be null");
			}
			Map<String, Object> map = new HashMap<String, Object>();
			map.put("condition", condition);
			map.put("value", value);
			criteriaWithSingleValue.add(map);
		}

		protected void addCriterion(String condition,
				List<? extends Object> values, String property) {
			if (values == null || values.size() == 0) {
				throw new RuntimeException("Value list for " + property
						+ " cannot be null or empty");
			}
			Map<String, Object> map = new HashMap<String, Object>();
			map.put("condition", condition);
			map.put("values", values);
			criteriaWithListValue.add(map);
		}

		protected void addCriterion(String condition, Object value1,
				Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property
						+ " cannot be null");
			}
			List<Object> list = new ArrayList<Object>();
			list.add(value1);
			list.add(value2);
			Map<String, Object> map = new HashMap<String, Object>();
			map.put("condition", condition);
			map.put("values", list);
			criteriaWithBetweenValue.add(map);
		}

		public Criteria andIdIsNull() {
			addCriterion("id is null");
			return this;
		}

		public Criteria andIdIsNotNull() {
			addCriterion("id is not null");
			return this;
		}

		public Criteria andIdEqualTo(Integer value) {
			addCriterion("id =", value, "id");
			return this;
		}

		public Criteria andIdNotEqualTo(Integer value) {
			addCriterion("id <>", value, "id");
			return this;
		}

		public Criteria andIdGreaterThan(Integer value) {
			addCriterion("id >", value, "id");
			return this;
		}

		public Criteria andIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("id >=", value, "id");
			return this;
		}

		public Criteria andIdLessThan(Integer value) {
			addCriterion("id <", value, "id");
			return this;
		}

		public Criteria andIdLessThanOrEqualTo(Integer value) {
			addCriterion("id <=", value, "id");
			return this;
		}

		public Criteria andIdIn(List<Integer> values) {
			addCriterion("id in", values, "id");
			return this;
		}

		public Criteria andIdNotIn(List<Integer> values) {
			addCriterion("id not in", values, "id");
			return this;
		}

		public Criteria andIdBetween(Integer value1, Integer value2) {
			addCriterion("id between", value1, value2, "id");
			return this;
		}

		public Criteria andIdNotBetween(Integer value1, Integer value2) {
			addCriterion("id not between", value1, value2, "id");
			return this;
		}

		public Criteria andPlayerIdIsNull() {
			addCriterion("player_id is null");
			return this;
		}

		public Criteria andPlayerIdIsNotNull() {
			addCriterion("player_id is not null");
			return this;
		}

		public Criteria andPlayerIdEqualTo(Integer value) {
			addCriterion("player_id =", value, "playerId");
			return this;
		}

		public Criteria andPlayerIdNotEqualTo(Integer value) {
			addCriterion("player_id <>", value, "playerId");
			return this;
		}

		public Criteria andPlayerIdGreaterThan(Integer value) {
			addCriterion("player_id >", value, "playerId");
			return this;
		}

		public Criteria andPlayerIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("player_id >=", value, "playerId");
			return this;
		}

		public Criteria andPlayerIdLessThan(Integer value) {
			addCriterion("player_id <", value, "playerId");
			return this;
		}

		public Criteria andPlayerIdLessThanOrEqualTo(Integer value) {
			addCriterion("player_id <=", value, "playerId");
			return this;
		}

		public Criteria andPlayerIdIn(List<Integer> values) {
			addCriterion("player_id in", values, "playerId");
			return this;
		}

		public Criteria andPlayerIdNotIn(List<Integer> values) {
			addCriterion("player_id not in", values, "playerId");
			return this;
		}

		public Criteria andPlayerIdBetween(Integer value1, Integer value2) {
			addCriterion("player_id between", value1, value2, "playerId");
			return this;
		}

		public Criteria andPlayerIdNotBetween(Integer value1, Integer value2) {
			addCriterion("player_id not between", value1, value2, "playerId");
			return this;
		}

		public Criteria andPlayerPhoneIsNull() {
			addCriterion("player_phone is null");
			return this;
		}

		public Criteria andPlayerPhoneIsNotNull() {
			addCriterion("player_phone is not null");
			return this;
		}

		public Criteria andPlayerPhoneEqualTo(String value) {
			addCriterion("player_phone =", value, "playerPhone");
			return this;
		}

		public Criteria andPlayerPhoneNotEqualTo(String value) {
			addCriterion("player_phone <>", value, "playerPhone");
			return this;
		}

		public Criteria andPlayerPhoneGreaterThan(String value) {
			addCriterion("player_phone >", value, "playerPhone");
			return this;
		}

		public Criteria andPlayerPhoneGreaterThanOrEqualTo(String value) {
			addCriterion("player_phone >=", value, "playerPhone");
			return this;
		}

		public Criteria andPlayerPhoneLessThan(String value) {
			addCriterion("player_phone <", value, "playerPhone");
			return this;
		}

		public Criteria andPlayerPhoneLessThanOrEqualTo(String value) {
			addCriterion("player_phone <=", value, "playerPhone");
			return this;
		}

		public Criteria andPlayerPhoneLike(String value) {
			addCriterion("player_phone like", value, "playerPhone");
			return this;
		}

		public Criteria andPlayerPhoneNotLike(String value) {
			addCriterion("player_phone not like", value, "playerPhone");
			return this;
		}

		public Criteria andPlayerPhoneIn(List<String> values) {
			addCriterion("player_phone in", values, "playerPhone");
			return this;
		}

		public Criteria andPlayerPhoneNotIn(List<String> values) {
			addCriterion("player_phone not in", values, "playerPhone");
			return this;
		}

		public Criteria andPlayerPhoneBetween(String value1, String value2) {
			addCriterion("player_phone between", value1, value2, "playerPhone");
			return this;
		}

		public Criteria andPlayerPhoneNotBetween(String value1, String value2) {
			addCriterion("player_phone not between", value1, value2,
					"playerPhone");
			return this;
		}

		public Criteria andCreateTimeIsNull() {
			addCriterion("create_time is null");
			return this;
		}

		public Criteria andCreateTimeIsNotNull() {
			addCriterion("create_time is not null");
			return this;
		}

		public Criteria andCreateTimeEqualTo(Date value) {
			addCriterion("create_time =", value, "createTime");
			return this;
		}

		public Criteria andCreateTimeNotEqualTo(Date value) {
			addCriterion("create_time <>", value, "createTime");
			return this;
		}

		public Criteria andCreateTimeGreaterThan(Date value) {
			addCriterion("create_time >", value, "createTime");
			return this;
		}

		public Criteria andCreateTimeGreaterThanOrEqualTo(Date value) {
			addCriterion("create_time >=", value, "createTime");
			return this;
		}

		public Criteria andCreateTimeLessThan(Date value) {
			addCriterion("create_time <", value, "createTime");
			return this;
		}

		public Criteria andCreateTimeLessThanOrEqualTo(Date value) {
			addCriterion("create_time <=", value, "createTime");
			return this;
		}

		public Criteria andCreateTimeIn(List<Date> values) {
			addCriterion("create_time in", values, "createTime");
			return this;
		}

		public Criteria andCreateTimeNotIn(List<Date> values) {
			addCriterion("create_time not in", values, "createTime");
			return this;
		}

		public Criteria andCreateTimeBetween(Date value1, Date value2) {
			addCriterion("create_time between", value1, value2, "createTime");
			return this;
		}

		public Criteria andCreateTimeNotBetween(Date value1, Date value2) {
			addCriterion("create_time not between", value1, value2,
					"createTime");
			return this;
		}

		public Criteria andWheelRewardIdIsNull() {
			addCriterion("wheel_reward_id is null");
			return this;
		}

		public Criteria andWheelRewardIdIsNotNull() {
			addCriterion("wheel_reward_id is not null");
			return this;
		}

		public Criteria andWheelRewardIdEqualTo(Integer value) {
			addCriterion("wheel_reward_id =", value, "wheelRewardId");
			return this;
		}

		public Criteria andWheelRewardIdNotEqualTo(Integer value) {
			addCriterion("wheel_reward_id <>", value, "wheelRewardId");
			return this;
		}

		public Criteria andWheelRewardIdGreaterThan(Integer value) {
			addCriterion("wheel_reward_id >", value, "wheelRewardId");
			return this;
		}

		public Criteria andWheelRewardIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("wheel_reward_id >=", value, "wheelRewardId");
			return this;
		}

		public Criteria andWheelRewardIdLessThan(Integer value) {
			addCriterion("wheel_reward_id <", value, "wheelRewardId");
			return this;
		}

		public Criteria andWheelRewardIdLessThanOrEqualTo(Integer value) {
			addCriterion("wheel_reward_id <=", value, "wheelRewardId");
			return this;
		}

		public Criteria andWheelRewardIdIn(List<Integer> values) {
			addCriterion("wheel_reward_id in", values, "wheelRewardId");
			return this;
		}

		public Criteria andWheelRewardIdNotIn(List<Integer> values) {
			addCriterion("wheel_reward_id not in", values, "wheelRewardId");
			return this;
		}

		public Criteria andWheelRewardIdBetween(Integer value1, Integer value2) {
			addCriterion("wheel_reward_id between", value1, value2,
					"wheelRewardId");
			return this;
		}

		public Criteria andWheelRewardIdNotBetween(Integer value1,
				Integer value2) {
			addCriterion("wheel_reward_id not between", value1, value2,
					"wheelRewardId");
			return this;
		}

		public Criteria andChangeStatusIsNull() {
			addCriterion("change_status is null");
			return this;
		}

		public Criteria andChangeStatusIsNotNull() {
			addCriterion("change_status is not null");
			return this;
		}

		public Criteria andChangeStatusEqualTo(Integer value) {
			addCriterion("change_status =", value, "changeStatus");
			return this;
		}

		public Criteria andChangeStatusNotEqualTo(Integer value) {
			addCriterion("change_status <>", value, "changeStatus");
			return this;
		}

		public Criteria andChangeStatusGreaterThan(Integer value) {
			addCriterion("change_status >", value, "changeStatus");
			return this;
		}

		public Criteria andChangeStatusGreaterThanOrEqualTo(Integer value) {
			addCriterion("change_status >=", value, "changeStatus");
			return this;
		}

		public Criteria andChangeStatusLessThan(Integer value) {
			addCriterion("change_status <", value, "changeStatus");
			return this;
		}

		public Criteria andChangeStatusLessThanOrEqualTo(Integer value) {
			addCriterion("change_status <=", value, "changeStatus");
			return this;
		}

		public Criteria andChangeStatusIn(List<Integer> values) {
			addCriterion("change_status in", values, "changeStatus");
			return this;
		}

		public Criteria andChangeStatusNotIn(List<Integer> values) {
			addCriterion("change_status not in", values, "changeStatus");
			return this;
		}

		public Criteria andChangeStatusBetween(Integer value1, Integer value2) {
			addCriterion("change_status between", value1, value2,
					"changeStatus");
			return this;
		}

		public Criteria andChangeStatusNotBetween(Integer value1, Integer value2) {
			addCriterion("change_status not between", value1, value2,
					"changeStatus");
			return this;
		}

		public Criteria andUpdateTimeIsNull() {
			addCriterion("update_time is null");
			return this;
		}

		public Criteria andUpdateTimeIsNotNull() {
			addCriterion("update_time is not null");
			return this;
		}

		public Criteria andUpdateTimeEqualTo(Date value) {
			addCriterion("update_time =", value, "updateTime");
			return this;
		}

		public Criteria andUpdateTimeNotEqualTo(Date value) {
			addCriterion("update_time <>", value, "updateTime");
			return this;
		}

		public Criteria andUpdateTimeGreaterThan(Date value) {
			addCriterion("update_time >", value, "updateTime");
			return this;
		}

		public Criteria andUpdateTimeGreaterThanOrEqualTo(Date value) {
			addCriterion("update_time >=", value, "updateTime");
			return this;
		}

		public Criteria andUpdateTimeLessThan(Date value) {
			addCriterion("update_time <", value, "updateTime");
			return this;
		}

		public Criteria andUpdateTimeLessThanOrEqualTo(Date value) {
			addCriterion("update_time <=", value, "updateTime");
			return this;
		}

		public Criteria andUpdateTimeIn(List<Date> values) {
			addCriterion("update_time in", values, "updateTime");
			return this;
		}

		public Criteria andUpdateTimeNotIn(List<Date> values) {
			addCriterion("update_time not in", values, "updateTime");
			return this;
		}

		public Criteria andUpdateTimeBetween(Date value1, Date value2) {
			addCriterion("update_time between", value1, value2, "updateTime");
			return this;
		}

		public Criteria andUpdateTimeNotBetween(Date value1, Date value2) {
			addCriterion("update_time not between", value1, value2,
					"updateTime");
			return this;
		}
	}
}