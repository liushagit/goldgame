package com.orange.goldgame.domain;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class RankingExample {

	/**
	 * This field was generated by Apache iBATIS ibator. This field corresponds to the database table ranking
	 * @ibatorgenerated  Wed Feb 12 09:55:45 CST 2014
	 */
	protected String orderByClause;
	/**
	 * This field was generated by Apache iBATIS ibator. This field corresponds to the database table ranking
	 * @ibatorgenerated  Wed Feb 12 09:55:45 CST 2014
	 */
	protected List oredCriteria;

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table ranking
	 * @ibatorgenerated  Wed Feb 12 09:55:45 CST 2014
	 */
	public RankingExample() {
		oredCriteria = new ArrayList();
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table ranking
	 * @ibatorgenerated  Wed Feb 12 09:55:45 CST 2014
	 */
	protected RankingExample(RankingExample example) {
		this.orderByClause = example.orderByClause;
		this.oredCriteria = example.oredCriteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table ranking
	 * @ibatorgenerated  Wed Feb 12 09:55:45 CST 2014
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table ranking
	 * @ibatorgenerated  Wed Feb 12 09:55:45 CST 2014
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table ranking
	 * @ibatorgenerated  Wed Feb 12 09:55:45 CST 2014
	 */
	public List getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table ranking
	 * @ibatorgenerated  Wed Feb 12 09:55:45 CST 2014
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table ranking
	 * @ibatorgenerated  Wed Feb 12 09:55:45 CST 2014
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table ranking
	 * @ibatorgenerated  Wed Feb 12 09:55:45 CST 2014
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table ranking
	 * @ibatorgenerated  Wed Feb 12 09:55:45 CST 2014
	 */
	public void clear() {
		oredCriteria.clear();
	}

	/**
	 * This class was generated by Apache iBATIS ibator. This class corresponds to the database table ranking
	 * @ibatorgenerated  Wed Feb 12 09:55:45 CST 2014
	 */
	public static class Criteria {
		protected List criteriaWithoutValue;
		protected List criteriaWithSingleValue;
		protected List criteriaWithListValue;
		protected List criteriaWithBetweenValue;

		protected Criteria() {
			super();
			criteriaWithoutValue = new ArrayList();
			criteriaWithSingleValue = new ArrayList();
			criteriaWithListValue = new ArrayList();
			criteriaWithBetweenValue = new ArrayList();
		}

		public boolean isValid() {
			return criteriaWithoutValue.size() > 0
					|| criteriaWithSingleValue.size() > 0
					|| criteriaWithListValue.size() > 0
					|| criteriaWithBetweenValue.size() > 0;
		}

		public List getCriteriaWithoutValue() {
			return criteriaWithoutValue;
		}

		public List getCriteriaWithSingleValue() {
			return criteriaWithSingleValue;
		}

		public List getCriteriaWithListValue() {
			return criteriaWithListValue;
		}

		public List getCriteriaWithBetweenValue() {
			return criteriaWithBetweenValue;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteriaWithoutValue.add(condition);
		}

		protected void addCriterion(String condition, Object value,
				String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property
						+ " cannot be null");
			}
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("value", value);
			criteriaWithSingleValue.add(map);
		}

		protected void addCriterion(String condition, List values,
				String property) {
			if (values == null || values.size() == 0) {
				throw new RuntimeException("Value list for " + property
						+ " cannot be null or empty");
			}
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("values", values);
			criteriaWithListValue.add(map);
		}

		protected void addCriterion(String condition, Object value1,
				Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property
						+ " cannot be null");
			}
			List list = new ArrayList();
			list.add(value1);
			list.add(value2);
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("values", list);
			criteriaWithBetweenValue.add(map);
		}

		public Criteria andIdIsNull() {
			addCriterion("id is null");
			return this;
		}

		public Criteria andIdIsNotNull() {
			addCriterion("id is not null");
			return this;
		}

		public Criteria andIdEqualTo(Integer value) {
			addCriterion("id =", value, "id");
			return this;
		}

		public Criteria andIdNotEqualTo(Integer value) {
			addCriterion("id <>", value, "id");
			return this;
		}

		public Criteria andIdGreaterThan(Integer value) {
			addCriterion("id >", value, "id");
			return this;
		}

		public Criteria andIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("id >=", value, "id");
			return this;
		}

		public Criteria andIdLessThan(Integer value) {
			addCriterion("id <", value, "id");
			return this;
		}

		public Criteria andIdLessThanOrEqualTo(Integer value) {
			addCriterion("id <=", value, "id");
			return this;
		}

		public Criteria andIdIn(List values) {
			addCriterion("id in", values, "id");
			return this;
		}

		public Criteria andIdNotIn(List values) {
			addCriterion("id not in", values, "id");
			return this;
		}

		public Criteria andIdBetween(Integer value1, Integer value2) {
			addCriterion("id between", value1, value2, "id");
			return this;
		}

		public Criteria andIdNotBetween(Integer value1, Integer value2) {
			addCriterion("id not between", value1, value2, "id");
			return this;
		}

		public Criteria andPlayerIdIsNull() {
			addCriterion("player_id is null");
			return this;
		}

		public Criteria andPlayerIdIsNotNull() {
			addCriterion("player_id is not null");
			return this;
		}

		public Criteria andPlayerIdEqualTo(Integer value) {
			addCriterion("player_id =", value, "playerId");
			return this;
		}

		public Criteria andPlayerIdNotEqualTo(Integer value) {
			addCriterion("player_id <>", value, "playerId");
			return this;
		}

		public Criteria andPlayerIdGreaterThan(Integer value) {
			addCriterion("player_id >", value, "playerId");
			return this;
		}

		public Criteria andPlayerIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("player_id >=", value, "playerId");
			return this;
		}

		public Criteria andPlayerIdLessThan(Integer value) {
			addCriterion("player_id <", value, "playerId");
			return this;
		}

		public Criteria andPlayerIdLessThanOrEqualTo(Integer value) {
			addCriterion("player_id <=", value, "playerId");
			return this;
		}

		public Criteria andPlayerIdIn(List values) {
			addCriterion("player_id in", values, "playerId");
			return this;
		}

		public Criteria andPlayerIdNotIn(List values) {
			addCriterion("player_id not in", values, "playerId");
			return this;
		}

		public Criteria andPlayerIdBetween(Integer value1, Integer value2) {
			addCriterion("player_id between", value1, value2, "playerId");
			return this;
		}

		public Criteria andPlayerIdNotBetween(Integer value1, Integer value2) {
			addCriterion("player_id not between", value1, value2, "playerId");
			return this;
		}

		public Criteria andPlayerNameIsNull() {
			addCriterion("player_name is null");
			return this;
		}

		public Criteria andPlayerNameIsNotNull() {
			addCriterion("player_name is not null");
			return this;
		}

		public Criteria andPlayerNameEqualTo(String value) {
			addCriterion("player_name =", value, "playerName");
			return this;
		}

		public Criteria andPlayerNameNotEqualTo(String value) {
			addCriterion("player_name <>", value, "playerName");
			return this;
		}

		public Criteria andPlayerNameGreaterThan(String value) {
			addCriterion("player_name >", value, "playerName");
			return this;
		}

		public Criteria andPlayerNameGreaterThanOrEqualTo(String value) {
			addCriterion("player_name >=", value, "playerName");
			return this;
		}

		public Criteria andPlayerNameLessThan(String value) {
			addCriterion("player_name <", value, "playerName");
			return this;
		}

		public Criteria andPlayerNameLessThanOrEqualTo(String value) {
			addCriterion("player_name <=", value, "playerName");
			return this;
		}

		public Criteria andPlayerNameLike(String value) {
			addCriterion("player_name like", value, "playerName");
			return this;
		}

		public Criteria andPlayerNameNotLike(String value) {
			addCriterion("player_name not like", value, "playerName");
			return this;
		}

		public Criteria andPlayerNameIn(List values) {
			addCriterion("player_name in", values, "playerName");
			return this;
		}

		public Criteria andPlayerNameNotIn(List values) {
			addCriterion("player_name not in", values, "playerName");
			return this;
		}

		public Criteria andPlayerNameBetween(String value1, String value2) {
			addCriterion("player_name between", value1, value2, "playerName");
			return this;
		}

		public Criteria andPlayerNameNotBetween(String value1, String value2) {
			addCriterion("player_name not between", value1, value2,
					"playerName");
			return this;
		}

		public Criteria andRankValueIsNull() {
			addCriterion("rank_value is null");
			return this;
		}

		public Criteria andRankValueIsNotNull() {
			addCriterion("rank_value is not null");
			return this;
		}

		public Criteria andRankValueEqualTo(Integer value) {
			addCriterion("rank_value =", value, "rankValue");
			return this;
		}

		public Criteria andRankValueNotEqualTo(Integer value) {
			addCriterion("rank_value <>", value, "rankValue");
			return this;
		}

		public Criteria andRankValueGreaterThan(Integer value) {
			addCriterion("rank_value >", value, "rankValue");
			return this;
		}

		public Criteria andRankValueGreaterThanOrEqualTo(Integer value) {
			addCriterion("rank_value >=", value, "rankValue");
			return this;
		}

		public Criteria andRankValueLessThan(Integer value) {
			addCriterion("rank_value <", value, "rankValue");
			return this;
		}

		public Criteria andRankValueLessThanOrEqualTo(Integer value) {
			addCriterion("rank_value <=", value, "rankValue");
			return this;
		}

		public Criteria andRankValueIn(List values) {
			addCriterion("rank_value in", values, "rankValue");
			return this;
		}

		public Criteria andRankValueNotIn(List values) {
			addCriterion("rank_value not in", values, "rankValue");
			return this;
		}

		public Criteria andRankValueBetween(Integer value1, Integer value2) {
			addCriterion("rank_value between", value1, value2, "rankValue");
			return this;
		}

		public Criteria andRankValueNotBetween(Integer value1, Integer value2) {
			addCriterion("rank_value not between", value1, value2, "rankValue");
			return this;
		}

		public Criteria andRankTypeIsNull() {
			addCriterion("rank_type is null");
			return this;
		}

		public Criteria andRankTypeIsNotNull() {
			addCriterion("rank_type is not null");
			return this;
		}

		public Criteria andRankTypeEqualTo(Integer value) {
			addCriterion("rank_type =", value, "rankType");
			return this;
		}

		public Criteria andRankTypeNotEqualTo(Integer value) {
			addCriterion("rank_type <>", value, "rankType");
			return this;
		}

		public Criteria andRankTypeGreaterThan(Integer value) {
			addCriterion("rank_type >", value, "rankType");
			return this;
		}

		public Criteria andRankTypeGreaterThanOrEqualTo(Integer value) {
			addCriterion("rank_type >=", value, "rankType");
			return this;
		}

		public Criteria andRankTypeLessThan(Integer value) {
			addCriterion("rank_type <", value, "rankType");
			return this;
		}

		public Criteria andRankTypeLessThanOrEqualTo(Integer value) {
			addCriterion("rank_type <=", value, "rankType");
			return this;
		}

		public Criteria andRankTypeIn(List values) {
			addCriterion("rank_type in", values, "rankType");
			return this;
		}

		public Criteria andRankTypeNotIn(List values) {
			addCriterion("rank_type not in", values, "rankType");
			return this;
		}

		public Criteria andRankTypeBetween(Integer value1, Integer value2) {
			addCriterion("rank_type between", value1, value2, "rankType");
			return this;
		}

		public Criteria andRankTypeNotBetween(Integer value1, Integer value2) {
			addCriterion("rank_type not between", value1, value2, "rankType");
			return this;
		}
	}
}