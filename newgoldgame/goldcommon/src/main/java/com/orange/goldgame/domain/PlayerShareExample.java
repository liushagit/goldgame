package com.orange.goldgame.domain;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class PlayerShareExample {

	/**
	 * This field was generated by Apache iBATIS ibator. This field corresponds to the database table player_share
	 * @ibatorgenerated  Thu Oct 24 17:07:49 CST 2013
	 */
	protected String orderByClause;
	/**
	 * This field was generated by Apache iBATIS ibator. This field corresponds to the database table player_share
	 * @ibatorgenerated  Thu Oct 24 17:07:49 CST 2013
	 */
	protected List oredCriteria;

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table player_share
	 * @ibatorgenerated  Thu Oct 24 17:07:49 CST 2013
	 */
	public PlayerShareExample() {
		oredCriteria = new ArrayList();
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table player_share
	 * @ibatorgenerated  Thu Oct 24 17:07:49 CST 2013
	 */
	protected PlayerShareExample(PlayerShareExample example) {
		this.orderByClause = example.orderByClause;
		this.oredCriteria = example.oredCriteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table player_share
	 * @ibatorgenerated  Thu Oct 24 17:07:49 CST 2013
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table player_share
	 * @ibatorgenerated  Thu Oct 24 17:07:49 CST 2013
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table player_share
	 * @ibatorgenerated  Thu Oct 24 17:07:49 CST 2013
	 */
	public List getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table player_share
	 * @ibatorgenerated  Thu Oct 24 17:07:49 CST 2013
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table player_share
	 * @ibatorgenerated  Thu Oct 24 17:07:49 CST 2013
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table player_share
	 * @ibatorgenerated  Thu Oct 24 17:07:49 CST 2013
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table player_share
	 * @ibatorgenerated  Thu Oct 24 17:07:49 CST 2013
	 */
	public void clear() {
		oredCriteria.clear();
	}

	/**
	 * This class was generated by Apache iBATIS ibator. This class corresponds to the database table player_share
	 * @ibatorgenerated  Thu Oct 24 17:07:49 CST 2013
	 */
	public static class Criteria {
		protected List criteriaWithoutValue;
		protected List criteriaWithSingleValue;
		protected List criteriaWithListValue;
		protected List criteriaWithBetweenValue;

		protected Criteria() {
			super();
			criteriaWithoutValue = new ArrayList();
			criteriaWithSingleValue = new ArrayList();
			criteriaWithListValue = new ArrayList();
			criteriaWithBetweenValue = new ArrayList();
		}

		public boolean isValid() {
			return criteriaWithoutValue.size() > 0
					|| criteriaWithSingleValue.size() > 0
					|| criteriaWithListValue.size() > 0
					|| criteriaWithBetweenValue.size() > 0;
		}

		public List getCriteriaWithoutValue() {
			return criteriaWithoutValue;
		}

		public List getCriteriaWithSingleValue() {
			return criteriaWithSingleValue;
		}

		public List getCriteriaWithListValue() {
			return criteriaWithListValue;
		}

		public List getCriteriaWithBetweenValue() {
			return criteriaWithBetweenValue;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteriaWithoutValue.add(condition);
		}

		protected void addCriterion(String condition, Object value,
				String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property
						+ " cannot be null");
			}
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("value", value);
			criteriaWithSingleValue.add(map);
		}

		protected void addCriterion(String condition, List values,
				String property) {
			if (values == null || values.size() == 0) {
				throw new RuntimeException("Value list for " + property
						+ " cannot be null or empty");
			}
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("values", values);
			criteriaWithListValue.add(map);
		}

		protected void addCriterion(String condition, Object value1,
				Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property
						+ " cannot be null");
			}
			List list = new ArrayList();
			list.add(value1);
			list.add(value2);
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("values", list);
			criteriaWithBetweenValue.add(map);
		}

		public Criteria andIdIsNull() {
			addCriterion("id is null");
			return this;
		}

		public Criteria andIdIsNotNull() {
			addCriterion("id is not null");
			return this;
		}

		public Criteria andIdEqualTo(Integer value) {
			addCriterion("id =", value, "id");
			return this;
		}

		public Criteria andIdNotEqualTo(Integer value) {
			addCriterion("id <>", value, "id");
			return this;
		}

		public Criteria andIdGreaterThan(Integer value) {
			addCriterion("id >", value, "id");
			return this;
		}

		public Criteria andIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("id >=", value, "id");
			return this;
		}

		public Criteria andIdLessThan(Integer value) {
			addCriterion("id <", value, "id");
			return this;
		}

		public Criteria andIdLessThanOrEqualTo(Integer value) {
			addCriterion("id <=", value, "id");
			return this;
		}

		public Criteria andIdIn(List values) {
			addCriterion("id in", values, "id");
			return this;
		}

		public Criteria andIdNotIn(List values) {
			addCriterion("id not in", values, "id");
			return this;
		}

		public Criteria andIdBetween(Integer value1, Integer value2) {
			addCriterion("id between", value1, value2, "id");
			return this;
		}

		public Criteria andIdNotBetween(Integer value1, Integer value2) {
			addCriterion("id not between", value1, value2, "id");
			return this;
		}

		public Criteria andPlayerIdIsNull() {
			addCriterion("player_id is null");
			return this;
		}

		public Criteria andPlayerIdIsNotNull() {
			addCriterion("player_id is not null");
			return this;
		}

		public Criteria andPlayerIdEqualTo(Integer value) {
			addCriterion("player_id =", value, "playerId");
			return this;
		}

		public Criteria andPlayerIdNotEqualTo(Integer value) {
			addCriterion("player_id <>", value, "playerId");
			return this;
		}

		public Criteria andPlayerIdGreaterThan(Integer value) {
			addCriterion("player_id >", value, "playerId");
			return this;
		}

		public Criteria andPlayerIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("player_id >=", value, "playerId");
			return this;
		}

		public Criteria andPlayerIdLessThan(Integer value) {
			addCriterion("player_id <", value, "playerId");
			return this;
		}

		public Criteria andPlayerIdLessThanOrEqualTo(Integer value) {
			addCriterion("player_id <=", value, "playerId");
			return this;
		}

		public Criteria andPlayerIdIn(List values) {
			addCriterion("player_id in", values, "playerId");
			return this;
		}

		public Criteria andPlayerIdNotIn(List values) {
			addCriterion("player_id not in", values, "playerId");
			return this;
		}

		public Criteria andPlayerIdBetween(Integer value1, Integer value2) {
			addCriterion("player_id between", value1, value2, "playerId");
			return this;
		}

		public Criteria andPlayerIdNotBetween(Integer value1, Integer value2) {
			addCriterion("player_id not between", value1, value2, "playerId");
			return this;
		}

		public Criteria andSharePlayerIdsIsNull() {
			addCriterion("share_player_ids is null");
			return this;
		}

		public Criteria andSharePlayerIdsIsNotNull() {
			addCriterion("share_player_ids is not null");
			return this;
		}

		public Criteria andSharePlayerIdsEqualTo(String value) {
			addCriterion("share_player_ids =", value, "sharePlayerIds");
			return this;
		}

		public Criteria andSharePlayerIdsNotEqualTo(String value) {
			addCriterion("share_player_ids <>", value, "sharePlayerIds");
			return this;
		}

		public Criteria andSharePlayerIdsGreaterThan(String value) {
			addCriterion("share_player_ids >", value, "sharePlayerIds");
			return this;
		}

		public Criteria andSharePlayerIdsGreaterThanOrEqualTo(String value) {
			addCriterion("share_player_ids >=", value, "sharePlayerIds");
			return this;
		}

		public Criteria andSharePlayerIdsLessThan(String value) {
			addCriterion("share_player_ids <", value, "sharePlayerIds");
			return this;
		}

		public Criteria andSharePlayerIdsLessThanOrEqualTo(String value) {
			addCriterion("share_player_ids <=", value, "sharePlayerIds");
			return this;
		}

		public Criteria andSharePlayerIdsLike(String value) {
			addCriterion("share_player_ids like", value, "sharePlayerIds");
			return this;
		}

		public Criteria andSharePlayerIdsNotLike(String value) {
			addCriterion("share_player_ids not like", value, "sharePlayerIds");
			return this;
		}

		public Criteria andSharePlayerIdsIn(List values) {
			addCriterion("share_player_ids in", values, "sharePlayerIds");
			return this;
		}

		public Criteria andSharePlayerIdsNotIn(List values) {
			addCriterion("share_player_ids not in", values, "sharePlayerIds");
			return this;
		}

		public Criteria andSharePlayerIdsBetween(String value1, String value2) {
			addCriterion("share_player_ids between", value1, value2,
					"sharePlayerIds");
			return this;
		}

		public Criteria andSharePlayerIdsNotBetween(String value1, String value2) {
			addCriterion("share_player_ids not between", value1, value2,
					"sharePlayerIds");
			return this;
		}

		public Criteria andShareRewardIdsIsNull() {
			addCriterion("share_reward_ids is null");
			return this;
		}

		public Criteria andShareRewardIdsIsNotNull() {
			addCriterion("share_reward_ids is not null");
			return this;
		}

		public Criteria andShareRewardIdsEqualTo(String value) {
			addCriterion("share_reward_ids =", value, "shareRewardIds");
			return this;
		}

		public Criteria andShareRewardIdsNotEqualTo(String value) {
			addCriterion("share_reward_ids <>", value, "shareRewardIds");
			return this;
		}

		public Criteria andShareRewardIdsGreaterThan(String value) {
			addCriterion("share_reward_ids >", value, "shareRewardIds");
			return this;
		}

		public Criteria andShareRewardIdsGreaterThanOrEqualTo(String value) {
			addCriterion("share_reward_ids >=", value, "shareRewardIds");
			return this;
		}

		public Criteria andShareRewardIdsLessThan(String value) {
			addCriterion("share_reward_ids <", value, "shareRewardIds");
			return this;
		}

		public Criteria andShareRewardIdsLessThanOrEqualTo(String value) {
			addCriterion("share_reward_ids <=", value, "shareRewardIds");
			return this;
		}

		public Criteria andShareRewardIdsLike(String value) {
			addCriterion("share_reward_ids like", value, "shareRewardIds");
			return this;
		}

		public Criteria andShareRewardIdsNotLike(String value) {
			addCriterion("share_reward_ids not like", value, "shareRewardIds");
			return this;
		}

		public Criteria andShareRewardIdsIn(List values) {
			addCriterion("share_reward_ids in", values, "shareRewardIds");
			return this;
		}

		public Criteria andShareRewardIdsNotIn(List values) {
			addCriterion("share_reward_ids not in", values, "shareRewardIds");
			return this;
		}

		public Criteria andShareRewardIdsBetween(String value1, String value2) {
			addCriterion("share_reward_ids between", value1, value2,
					"shareRewardIds");
			return this;
		}

		public Criteria andShareRewardIdsNotBetween(String value1, String value2) {
			addCriterion("share_reward_ids not between", value1, value2,
					"shareRewardIds");
			return this;
		}
	}
}