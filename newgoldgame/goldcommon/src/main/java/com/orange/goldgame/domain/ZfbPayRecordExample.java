package com.orange.goldgame.domain;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class ZfbPayRecordExample {

	/**
	 * This field was generated by Apache iBATIS ibator. This field corresponds to the database table zfb_pay_record
	 * @ibatorgenerated  Wed Nov 20 10:11:05 CST 2013
	 */
	protected String orderByClause;
	/**
	 * This field was generated by Apache iBATIS ibator. This field corresponds to the database table zfb_pay_record
	 * @ibatorgenerated  Wed Nov 20 10:11:05 CST 2013
	 */
	protected List oredCriteria;

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table zfb_pay_record
	 * @ibatorgenerated  Wed Nov 20 10:11:05 CST 2013
	 */
	public ZfbPayRecordExample() {
		oredCriteria = new ArrayList();
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table zfb_pay_record
	 * @ibatorgenerated  Wed Nov 20 10:11:05 CST 2013
	 */
	protected ZfbPayRecordExample(ZfbPayRecordExample example) {
		this.orderByClause = example.orderByClause;
		this.oredCriteria = example.oredCriteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table zfb_pay_record
	 * @ibatorgenerated  Wed Nov 20 10:11:05 CST 2013
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table zfb_pay_record
	 * @ibatorgenerated  Wed Nov 20 10:11:05 CST 2013
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table zfb_pay_record
	 * @ibatorgenerated  Wed Nov 20 10:11:05 CST 2013
	 */
	public List getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table zfb_pay_record
	 * @ibatorgenerated  Wed Nov 20 10:11:05 CST 2013
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table zfb_pay_record
	 * @ibatorgenerated  Wed Nov 20 10:11:05 CST 2013
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table zfb_pay_record
	 * @ibatorgenerated  Wed Nov 20 10:11:05 CST 2013
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table zfb_pay_record
	 * @ibatorgenerated  Wed Nov 20 10:11:05 CST 2013
	 */
	public void clear() {
		oredCriteria.clear();
	}

	/**
	 * This class was generated by Apache iBATIS ibator. This class corresponds to the database table zfb_pay_record
	 * @ibatorgenerated  Wed Nov 20 10:11:05 CST 2013
	 */
	public static class Criteria {
		protected List criteriaWithoutValue;
		protected List criteriaWithSingleValue;
		protected List criteriaWithListValue;
		protected List criteriaWithBetweenValue;

		protected Criteria() {
			super();
			criteriaWithoutValue = new ArrayList();
			criteriaWithSingleValue = new ArrayList();
			criteriaWithListValue = new ArrayList();
			criteriaWithBetweenValue = new ArrayList();
		}

		public boolean isValid() {
			return criteriaWithoutValue.size() > 0
					|| criteriaWithSingleValue.size() > 0
					|| criteriaWithListValue.size() > 0
					|| criteriaWithBetweenValue.size() > 0;
		}

		public List getCriteriaWithoutValue() {
			return criteriaWithoutValue;
		}

		public List getCriteriaWithSingleValue() {
			return criteriaWithSingleValue;
		}

		public List getCriteriaWithListValue() {
			return criteriaWithListValue;
		}

		public List getCriteriaWithBetweenValue() {
			return criteriaWithBetweenValue;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteriaWithoutValue.add(condition);
		}

		protected void addCriterion(String condition, Object value,
				String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property
						+ " cannot be null");
			}
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("value", value);
			criteriaWithSingleValue.add(map);
		}

		protected void addCriterion(String condition, List values,
				String property) {
			if (values == null || values.size() == 0) {
				throw new RuntimeException("Value list for " + property
						+ " cannot be null or empty");
			}
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("values", values);
			criteriaWithListValue.add(map);
		}

		protected void addCriterion(String condition, Object value1,
				Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property
						+ " cannot be null");
			}
			List list = new ArrayList();
			list.add(value1);
			list.add(value2);
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("values", list);
			criteriaWithBetweenValue.add(map);
		}

		public Criteria andIdIsNull() {
			addCriterion("id is null");
			return this;
		}

		public Criteria andIdIsNotNull() {
			addCriterion("id is not null");
			return this;
		}

		public Criteria andIdEqualTo(Integer value) {
			addCriterion("id =", value, "id");
			return this;
		}

		public Criteria andIdNotEqualTo(Integer value) {
			addCriterion("id <>", value, "id");
			return this;
		}

		public Criteria andIdGreaterThan(Integer value) {
			addCriterion("id >", value, "id");
			return this;
		}

		public Criteria andIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("id >=", value, "id");
			return this;
		}

		public Criteria andIdLessThan(Integer value) {
			addCriterion("id <", value, "id");
			return this;
		}

		public Criteria andIdLessThanOrEqualTo(Integer value) {
			addCriterion("id <=", value, "id");
			return this;
		}

		public Criteria andIdIn(List values) {
			addCriterion("id in", values, "id");
			return this;
		}

		public Criteria andIdNotIn(List values) {
			addCriterion("id not in", values, "id");
			return this;
		}

		public Criteria andIdBetween(Integer value1, Integer value2) {
			addCriterion("id between", value1, value2, "id");
			return this;
		}

		public Criteria andIdNotBetween(Integer value1, Integer value2) {
			addCriterion("id not between", value1, value2, "id");
			return this;
		}

		public Criteria andPayIdIsNull() {
			addCriterion("pay_id is null");
			return this;
		}

		public Criteria andPayIdIsNotNull() {
			addCriterion("pay_id is not null");
			return this;
		}

		public Criteria andPayIdEqualTo(String value) {
			addCriterion("pay_id =", value, "payId");
			return this;
		}

		public Criteria andPayIdNotEqualTo(String value) {
			addCriterion("pay_id <>", value, "payId");
			return this;
		}

		public Criteria andPayIdGreaterThan(String value) {
			addCriterion("pay_id >", value, "payId");
			return this;
		}

		public Criteria andPayIdGreaterThanOrEqualTo(String value) {
			addCriterion("pay_id >=", value, "payId");
			return this;
		}

		public Criteria andPayIdLessThan(String value) {
			addCriterion("pay_id <", value, "payId");
			return this;
		}

		public Criteria andPayIdLessThanOrEqualTo(String value) {
			addCriterion("pay_id <=", value, "payId");
			return this;
		}

		public Criteria andPayIdLike(String value) {
			addCriterion("pay_id like", value, "payId");
			return this;
		}

		public Criteria andPayIdNotLike(String value) {
			addCriterion("pay_id not like", value, "payId");
			return this;
		}

		public Criteria andPayIdIn(List values) {
			addCriterion("pay_id in", values, "payId");
			return this;
		}

		public Criteria andPayIdNotIn(List values) {
			addCriterion("pay_id not in", values, "payId");
			return this;
		}

		public Criteria andPayIdBetween(String value1, String value2) {
			addCriterion("pay_id between", value1, value2, "payId");
			return this;
		}

		public Criteria andPayIdNotBetween(String value1, String value2) {
			addCriterion("pay_id not between", value1, value2, "payId");
			return this;
		}

		public Criteria andPlayerIdIsNull() {
			addCriterion("player_id is null");
			return this;
		}

		public Criteria andPlayerIdIsNotNull() {
			addCriterion("player_id is not null");
			return this;
		}

		public Criteria andPlayerIdEqualTo(Integer value) {
			addCriterion("player_id =", value, "playerId");
			return this;
		}

		public Criteria andPlayerIdNotEqualTo(Integer value) {
			addCriterion("player_id <>", value, "playerId");
			return this;
		}

		public Criteria andPlayerIdGreaterThan(Integer value) {
			addCriterion("player_id >", value, "playerId");
			return this;
		}

		public Criteria andPlayerIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("player_id >=", value, "playerId");
			return this;
		}

		public Criteria andPlayerIdLessThan(Integer value) {
			addCriterion("player_id <", value, "playerId");
			return this;
		}

		public Criteria andPlayerIdLessThanOrEqualTo(Integer value) {
			addCriterion("player_id <=", value, "playerId");
			return this;
		}

		public Criteria andPlayerIdIn(List values) {
			addCriterion("player_id in", values, "playerId");
			return this;
		}

		public Criteria andPlayerIdNotIn(List values) {
			addCriterion("player_id not in", values, "playerId");
			return this;
		}

		public Criteria andPlayerIdBetween(Integer value1, Integer value2) {
			addCriterion("player_id between", value1, value2, "playerId");
			return this;
		}

		public Criteria andPlayerIdNotBetween(Integer value1, Integer value2) {
			addCriterion("player_id not between", value1, value2, "playerId");
			return this;
		}

		public Criteria andZfbUsernameIsNull() {
			addCriterion("zfb_username is null");
			return this;
		}

		public Criteria andZfbUsernameIsNotNull() {
			addCriterion("zfb_username is not null");
			return this;
		}

		public Criteria andZfbUsernameEqualTo(String value) {
			addCriterion("zfb_username =", value, "zfbUsername");
			return this;
		}

		public Criteria andZfbUsernameNotEqualTo(String value) {
			addCriterion("zfb_username <>", value, "zfbUsername");
			return this;
		}

		public Criteria andZfbUsernameGreaterThan(String value) {
			addCriterion("zfb_username >", value, "zfbUsername");
			return this;
		}

		public Criteria andZfbUsernameGreaterThanOrEqualTo(String value) {
			addCriterion("zfb_username >=", value, "zfbUsername");
			return this;
		}

		public Criteria andZfbUsernameLessThan(String value) {
			addCriterion("zfb_username <", value, "zfbUsername");
			return this;
		}

		public Criteria andZfbUsernameLessThanOrEqualTo(String value) {
			addCriterion("zfb_username <=", value, "zfbUsername");
			return this;
		}

		public Criteria andZfbUsernameLike(String value) {
			addCriterion("zfb_username like", value, "zfbUsername");
			return this;
		}

		public Criteria andZfbUsernameNotLike(String value) {
			addCriterion("zfb_username not like", value, "zfbUsername");
			return this;
		}

		public Criteria andZfbUsernameIn(List values) {
			addCriterion("zfb_username in", values, "zfbUsername");
			return this;
		}

		public Criteria andZfbUsernameNotIn(List values) {
			addCriterion("zfb_username not in", values, "zfbUsername");
			return this;
		}

		public Criteria andZfbUsernameBetween(String value1, String value2) {
			addCriterion("zfb_username between", value1, value2, "zfbUsername");
			return this;
		}

		public Criteria andZfbUsernameNotBetween(String value1, String value2) {
			addCriterion("zfb_username not between", value1, value2,
					"zfbUsername");
			return this;
		}

		public Criteria andGoodsNameIsNull() {
			addCriterion("goods_name is null");
			return this;
		}

		public Criteria andGoodsNameIsNotNull() {
			addCriterion("goods_name is not null");
			return this;
		}

		public Criteria andGoodsNameEqualTo(String value) {
			addCriterion("goods_name =", value, "goodsName");
			return this;
		}

		public Criteria andGoodsNameNotEqualTo(String value) {
			addCriterion("goods_name <>", value, "goodsName");
			return this;
		}

		public Criteria andGoodsNameGreaterThan(String value) {
			addCriterion("goods_name >", value, "goodsName");
			return this;
		}

		public Criteria andGoodsNameGreaterThanOrEqualTo(String value) {
			addCriterion("goods_name >=", value, "goodsName");
			return this;
		}

		public Criteria andGoodsNameLessThan(String value) {
			addCriterion("goods_name <", value, "goodsName");
			return this;
		}

		public Criteria andGoodsNameLessThanOrEqualTo(String value) {
			addCriterion("goods_name <=", value, "goodsName");
			return this;
		}

		public Criteria andGoodsNameLike(String value) {
			addCriterion("goods_name like", value, "goodsName");
			return this;
		}

		public Criteria andGoodsNameNotLike(String value) {
			addCriterion("goods_name not like", value, "goodsName");
			return this;
		}

		public Criteria andGoodsNameIn(List values) {
			addCriterion("goods_name in", values, "goodsName");
			return this;
		}

		public Criteria andGoodsNameNotIn(List values) {
			addCriterion("goods_name not in", values, "goodsName");
			return this;
		}

		public Criteria andGoodsNameBetween(String value1, String value2) {
			addCriterion("goods_name between", value1, value2, "goodsName");
			return this;
		}

		public Criteria andGoodsNameNotBetween(String value1, String value2) {
			addCriterion("goods_name not between", value1, value2, "goodsName");
			return this;
		}

		public Criteria andGoodsPriceIsNull() {
			addCriterion("goods_price is null");
			return this;
		}

		public Criteria andGoodsPriceIsNotNull() {
			addCriterion("goods_price is not null");
			return this;
		}

		public Criteria andGoodsPriceEqualTo(Float value) {
			addCriterion("goods_price =", value, "goodsPrice");
			return this;
		}

		public Criteria andGoodsPriceNotEqualTo(Float value) {
			addCriterion("goods_price <>", value, "goodsPrice");
			return this;
		}

		public Criteria andGoodsPriceGreaterThan(Float value) {
			addCriterion("goods_price >", value, "goodsPrice");
			return this;
		}

		public Criteria andGoodsPriceGreaterThanOrEqualTo(Float value) {
			addCriterion("goods_price >=", value, "goodsPrice");
			return this;
		}

		public Criteria andGoodsPriceLessThan(Float value) {
			addCriterion("goods_price <", value, "goodsPrice");
			return this;
		}

		public Criteria andGoodsPriceLessThanOrEqualTo(Float value) {
			addCriterion("goods_price <=", value, "goodsPrice");
			return this;
		}

		public Criteria andGoodsPriceIn(List values) {
			addCriterion("goods_price in", values, "goodsPrice");
			return this;
		}

		public Criteria andGoodsPriceNotIn(List values) {
			addCriterion("goods_price not in", values, "goodsPrice");
			return this;
		}

		public Criteria andGoodsPriceBetween(Float value1, Float value2) {
			addCriterion("goods_price between", value1, value2, "goodsPrice");
			return this;
		}

		public Criteria andGoodsPriceNotBetween(Float value1, Float value2) {
			addCriterion("goods_price not between", value1, value2,
					"goodsPrice");
			return this;
		}

		public Criteria andTradeStateIsNull() {
			addCriterion("trade_state is null");
			return this;
		}

		public Criteria andTradeStateIsNotNull() {
			addCriterion("trade_state is not null");
			return this;
		}

		public Criteria andTradeStateEqualTo(String value) {
			addCriterion("trade_state =", value, "tradeState");
			return this;
		}

		public Criteria andTradeStateNotEqualTo(String value) {
			addCriterion("trade_state <>", value, "tradeState");
			return this;
		}

		public Criteria andTradeStateGreaterThan(String value) {
			addCriterion("trade_state >", value, "tradeState");
			return this;
		}

		public Criteria andTradeStateGreaterThanOrEqualTo(String value) {
			addCriterion("trade_state >=", value, "tradeState");
			return this;
		}

		public Criteria andTradeStateLessThan(String value) {
			addCriterion("trade_state <", value, "tradeState");
			return this;
		}

		public Criteria andTradeStateLessThanOrEqualTo(String value) {
			addCriterion("trade_state <=", value, "tradeState");
			return this;
		}

		public Criteria andTradeStateLike(String value) {
			addCriterion("trade_state like", value, "tradeState");
			return this;
		}

		public Criteria andTradeStateNotLike(String value) {
			addCriterion("trade_state not like", value, "tradeState");
			return this;
		}

		public Criteria andTradeStateIn(List values) {
			addCriterion("trade_state in", values, "tradeState");
			return this;
		}

		public Criteria andTradeStateNotIn(List values) {
			addCriterion("trade_state not in", values, "tradeState");
			return this;
		}

		public Criteria andTradeStateBetween(String value1, String value2) {
			addCriterion("trade_state between", value1, value2, "tradeState");
			return this;
		}

		public Criteria andTradeStateNotBetween(String value1, String value2) {
			addCriterion("trade_state not between", value1, value2,
					"tradeState");
			return this;
		}

		public Criteria andPayTimeIsNull() {
			addCriterion("pay_time is null");
			return this;
		}

		public Criteria andPayTimeIsNotNull() {
			addCriterion("pay_time is not null");
			return this;
		}

		public Criteria andPayTimeEqualTo(Date value) {
			addCriterion("pay_time =", value, "payTime");
			return this;
		}

		public Criteria andPayTimeNotEqualTo(Date value) {
			addCriterion("pay_time <>", value, "payTime");
			return this;
		}

		public Criteria andPayTimeGreaterThan(Date value) {
			addCriterion("pay_time >", value, "payTime");
			return this;
		}

		public Criteria andPayTimeGreaterThanOrEqualTo(Date value) {
			addCriterion("pay_time >=", value, "payTime");
			return this;
		}

		public Criteria andPayTimeLessThan(Date value) {
			addCriterion("pay_time <", value, "payTime");
			return this;
		}

		public Criteria andPayTimeLessThanOrEqualTo(Date value) {
			addCriterion("pay_time <=", value, "payTime");
			return this;
		}

		public Criteria andPayTimeIn(List values) {
			addCriterion("pay_time in", values, "payTime");
			return this;
		}

		public Criteria andPayTimeNotIn(List values) {
			addCriterion("pay_time not in", values, "payTime");
			return this;
		}

		public Criteria andPayTimeBetween(Date value1, Date value2) {
			addCriterion("pay_time between", value1, value2, "payTime");
			return this;
		}

		public Criteria andPayTimeNotBetween(Date value1, Date value2) {
			addCriterion("pay_time not between", value1, value2, "payTime");
			return this;
		}
	}
}