package com.orange.goldgame.system.dao;

import java.sql.SQLException;
import java.util.List;

import com.ibatis.sqlmap.client.SqlMapClient;
import com.orange.goldgame.domain.PlayerWheelTimes;
import com.orange.goldgame.domain.PlayerWheelTimesExample;

public class PlayerWheelTimesDAOImpl implements PlayerWheelTimesDAO {
    /**
     * This field was generated by Abator for iBATIS.
     * This field corresponds to the database table player_wheel_times
     *
     * @abatorgenerated Wed Apr 09 11:52:48 CST 2014
     */
    private SqlMapClient sqlMapClient;

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table player_wheel_times
     *
     * @abatorgenerated Wed Apr 09 11:52:48 CST 2014
     */
    public PlayerWheelTimesDAOImpl(SqlMapClient sqlMapClient) {
        super();
        this.sqlMapClient = sqlMapClient;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table player_wheel_times
     *
     * @abatorgenerated Wed Apr 09 11:52:48 CST 2014
     */
    public Integer insert(PlayerWheelTimes record) throws SQLException {
        Object newKey = sqlMapClient.insert("player_wheel_times.abatorgenerated_insert", record);
        return (Integer) newKey;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table player_wheel_times
     *
     * @abatorgenerated Wed Apr 09 11:52:48 CST 2014
     */
    public int updateByPrimaryKey(PlayerWheelTimes record) throws SQLException {
        int rows = sqlMapClient.update("player_wheel_times.abatorgenerated_updateByPrimaryKey", record);
        return rows;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table player_wheel_times
     *
     * @abatorgenerated Wed Apr 09 11:52:48 CST 2014
     */
    public int updateByPrimaryKeySelective(PlayerWheelTimes record) throws SQLException {
        int rows = sqlMapClient.update("player_wheel_times.abatorgenerated_updateByPrimaryKeySelective", record);
        return rows;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table player_wheel_times
     *
     * @abatorgenerated Wed Apr 09 11:52:48 CST 2014
     */
    @SuppressWarnings("unchecked")
    public List<PlayerWheelTimes> selectByExample(PlayerWheelTimesExample example) throws SQLException {
        List<PlayerWheelTimes> list = (List<PlayerWheelTimes>) sqlMapClient.queryForList("player_wheel_times.abatorgenerated_selectByExample", example);
        return list;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table player_wheel_times
     *
     * @abatorgenerated Wed Apr 09 11:52:48 CST 2014
     */
    public PlayerWheelTimes selectByPrimaryKey(Integer id) throws SQLException {
        PlayerWheelTimes key = new PlayerWheelTimes();
        key.setId(id);
        PlayerWheelTimes record = (PlayerWheelTimes) sqlMapClient.queryForObject("player_wheel_times.abatorgenerated_selectByPrimaryKey", key);
        return record;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table player_wheel_times
     *
     * @abatorgenerated Wed Apr 09 11:52:48 CST 2014
     */
    public int deleteByExample(PlayerWheelTimesExample example) throws SQLException {
        int rows = sqlMapClient.delete("player_wheel_times.abatorgenerated_deleteByExample", example);
        return rows;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table player_wheel_times
     *
     * @abatorgenerated Wed Apr 09 11:52:48 CST 2014
     */
    public int deleteByPrimaryKey(Integer id) throws SQLException {
        PlayerWheelTimes key = new PlayerWheelTimes();
        key.setId(id);
        int rows = sqlMapClient.delete("player_wheel_times.abatorgenerated_deleteByPrimaryKey", key);
        return rows;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table player_wheel_times
     *
     * @abatorgenerated Wed Apr 09 11:52:48 CST 2014
     */
    public int countByExample(PlayerWheelTimesExample example) throws SQLException {
        Integer count = (Integer)  sqlMapClient.queryForObject("player_wheel_times.abatorgenerated_countByExample", example);
        return count;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table player_wheel_times
     *
     * @abatorgenerated Wed Apr 09 11:52:48 CST 2014
     */
    public int updateByExampleSelective(PlayerWheelTimes record, PlayerWheelTimesExample example) throws SQLException {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = sqlMapClient.update("player_wheel_times.abatorgenerated_updateByExampleSelective", parms);
        return rows;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table player_wheel_times
     *
     * @abatorgenerated Wed Apr 09 11:52:48 CST 2014
     */
    public int updateByExample(PlayerWheelTimes record, PlayerWheelTimesExample example) throws SQLException {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = sqlMapClient.update("player_wheel_times.abatorgenerated_updateByExample", parms);
        return rows;
    }

    /**
     * This class was generated by Abator for iBATIS.
     * This class corresponds to the database table player_wheel_times
     *
     * @abatorgenerated Wed Apr 09 11:52:48 CST 2014
     */
    private static class UpdateByExampleParms extends PlayerWheelTimesExample {
        private Object record;

        public UpdateByExampleParms(Object record, PlayerWheelTimesExample example) {
            super(example);
            this.record = record;
        }

        public Object getRecord() {
            return record;
        }
    }
}