package com.orange.goldgame.system.dao;

import java.sql.SQLException;
import java.util.List;

import com.ibatis.sqlmap.client.SqlMapClient;
import com.orange.goldgame.domain.WheelReward;
import com.orange.goldgame.domain.WheelRewardExample;

public class WheelRewardDAOImpl implements WheelRewardDAO {

	/**
	 * This field was generated by Abator for iBATIS. This field corresponds to the database table wheel_reward
	 * @abatorgenerated  Tue Mar 25 16:00:31 CST 2014
	 */
	private SqlMapClient sqlMapClient;

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table wheel_reward
	 * @abatorgenerated  Tue Mar 25 16:00:31 CST 2014
	 */
	public WheelRewardDAOImpl(SqlMapClient sqlMapClient) {
		super();
		this.sqlMapClient = sqlMapClient;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table wheel_reward
	 * @abatorgenerated  Tue Mar 25 16:00:31 CST 2014
	 */
	public Integer insert(WheelReward record) throws SQLException {
		Object newKey = sqlMapClient.insert(
				"wheel_reward.abatorgenerated_insert", record);
		return (Integer) newKey;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table wheel_reward
	 * @abatorgenerated  Tue Mar 25 16:00:31 CST 2014
	 */
	public int updateByPrimaryKey(WheelReward record) throws SQLException {
		int rows = sqlMapClient.update(
				"wheel_reward.abatorgenerated_updateByPrimaryKey", record);
		return rows;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table wheel_reward
	 * @abatorgenerated  Tue Mar 25 16:00:31 CST 2014
	 */
	public int updateByPrimaryKeySelective(WheelReward record)
			throws SQLException {
		int rows = sqlMapClient.update(
				"wheel_reward.abatorgenerated_updateByPrimaryKeySelective",
				record);
		return rows;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table wheel_reward
	 * @abatorgenerated  Tue Mar 25 16:00:31 CST 2014
	 */
	@SuppressWarnings("unchecked")
	public List<WheelReward> selectByExample(WheelRewardExample example)
			throws SQLException {
		List<WheelReward> list = (List<WheelReward>) sqlMapClient.queryForList(
				"wheel_reward.abatorgenerated_selectByExample", example);
		return list;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table wheel_reward
	 * @abatorgenerated  Tue Mar 25 16:00:31 CST 2014
	 */
	public WheelReward selectByPrimaryKey(Integer id) throws SQLException {
		WheelReward key = new WheelReward();
		key.setId(id);
		WheelReward record = (WheelReward) sqlMapClient.queryForObject(
				"wheel_reward.abatorgenerated_selectByPrimaryKey", key);
		return record;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table wheel_reward
	 * @abatorgenerated  Tue Mar 25 16:00:31 CST 2014
	 */
	public int deleteByExample(WheelRewardExample example) throws SQLException {
		int rows = sqlMapClient.delete(
				"wheel_reward.abatorgenerated_deleteByExample", example);
		return rows;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table wheel_reward
	 * @abatorgenerated  Tue Mar 25 16:00:31 CST 2014
	 */
	public int deleteByPrimaryKey(Integer id) throws SQLException {
		WheelReward key = new WheelReward();
		key.setId(id);
		int rows = sqlMapClient.delete(
				"wheel_reward.abatorgenerated_deleteByPrimaryKey", key);
		return rows;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table wheel_reward
	 * @abatorgenerated  Tue Mar 25 16:00:31 CST 2014
	 */
	public int countByExample(WheelRewardExample example) throws SQLException {
		Integer count = (Integer) sqlMapClient.queryForObject(
				"wheel_reward.abatorgenerated_countByExample", example);
		return count;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table wheel_reward
	 * @abatorgenerated  Tue Mar 25 16:00:31 CST 2014
	 */
	public int updateByExampleSelective(WheelReward record,
			WheelRewardExample example) throws SQLException {
		UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
		int rows = sqlMapClient.update(
				"wheel_reward.abatorgenerated_updateByExampleSelective", parms);
		return rows;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table wheel_reward
	 * @abatorgenerated  Tue Mar 25 16:00:31 CST 2014
	 */
	public int updateByExample(WheelReward record, WheelRewardExample example)
			throws SQLException {
		UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
		int rows = sqlMapClient.update(
				"wheel_reward.abatorgenerated_updateByExample", parms);
		return rows;
	}

	/**
	 * This class was generated by Abator for iBATIS. This class corresponds to the database table wheel_reward
	 * @abatorgenerated  Tue Mar 25 16:00:31 CST 2014
	 */
	private static class UpdateByExampleParms extends WheelRewardExample {
		private Object record;

		public UpdateByExampleParms(Object record, WheelRewardExample example) {
			super(example);
			this.record = record;
		}

		public Object getRecord() {
			return record;
		}
	}
}