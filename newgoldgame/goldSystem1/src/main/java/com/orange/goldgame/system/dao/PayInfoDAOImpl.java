package com.orange.goldgame.system.dao;

import java.sql.SQLException;
import java.util.List;

import com.ibatis.sqlmap.client.SqlMapClient;
import com.orange.goldgame.domain.PayInfo;
import com.orange.goldgame.domain.PayInfoExample;

public class PayInfoDAOImpl implements PayInfoDAO {

	/**
	 * This field was generated by Abator for iBATIS. This field corresponds to the database table pay_info
	 * @abatorgenerated  Thu Apr 17 14:51:09 CST 2014
	 */
	private SqlMapClient sqlMapClient;

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table pay_info
	 * @abatorgenerated  Thu Apr 17 14:51:09 CST 2014
	 */
	public PayInfoDAOImpl(SqlMapClient sqlMapClient) {
		super();
		this.sqlMapClient = sqlMapClient;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table pay_info
	 * @abatorgenerated  Thu Apr 17 14:51:09 CST 2014
	 */
	public Integer insert(PayInfo record) throws SQLException {
		Object newKey = sqlMapClient.insert("pay_info.abatorgenerated_insert",
				record);
		return (Integer) newKey;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table pay_info
	 * @abatorgenerated  Thu Apr 17 14:51:09 CST 2014
	 */
	public int updateByPrimaryKey(PayInfo record) throws SQLException {
		int rows = sqlMapClient.update(
				"pay_info.abatorgenerated_updateByPrimaryKey", record);
		return rows;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table pay_info
	 * @abatorgenerated  Thu Apr 17 14:51:09 CST 2014
	 */
	public int updateByPrimaryKeySelective(PayInfo record) throws SQLException {
		int rows = sqlMapClient.update(
				"pay_info.abatorgenerated_updateByPrimaryKeySelective", record);
		return rows;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table pay_info
	 * @abatorgenerated  Thu Apr 17 14:51:09 CST 2014
	 */
	@SuppressWarnings("unchecked")
	public List<PayInfo> selectByExample(PayInfoExample example)
			throws SQLException {
		List<PayInfo> list = (List<PayInfo>) sqlMapClient.queryForList(
				"pay_info.abatorgenerated_selectByExample", example);
		return list;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table pay_info
	 * @abatorgenerated  Thu Apr 17 14:51:09 CST 2014
	 */
	public PayInfo selectByPrimaryKey(Integer id) throws SQLException {
		PayInfo key = new PayInfo();
		key.setId(id);
		PayInfo record = (PayInfo) sqlMapClient.queryForObject(
				"pay_info.abatorgenerated_selectByPrimaryKey", key);
		return record;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table pay_info
	 * @abatorgenerated  Thu Apr 17 14:51:09 CST 2014
	 */
	public int deleteByExample(PayInfoExample example) throws SQLException {
		int rows = sqlMapClient.delete(
				"pay_info.abatorgenerated_deleteByExample", example);
		return rows;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table pay_info
	 * @abatorgenerated  Thu Apr 17 14:51:09 CST 2014
	 */
	public int deleteByPrimaryKey(Integer id) throws SQLException {
		PayInfo key = new PayInfo();
		key.setId(id);
		int rows = sqlMapClient.delete(
				"pay_info.abatorgenerated_deleteByPrimaryKey", key);
		return rows;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table pay_info
	 * @abatorgenerated  Thu Apr 17 14:51:09 CST 2014
	 */
	public int countByExample(PayInfoExample example) throws SQLException {
		Integer count = (Integer) sqlMapClient.queryForObject(
				"pay_info.abatorgenerated_countByExample", example);
		return count;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table pay_info
	 * @abatorgenerated  Thu Apr 17 14:51:09 CST 2014
	 */
	public int updateByExampleSelective(PayInfo record, PayInfoExample example)
			throws SQLException {
		UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
		int rows = sqlMapClient.update(
				"pay_info.abatorgenerated_updateByExampleSelective", parms);
		return rows;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table pay_info
	 * @abatorgenerated  Thu Apr 17 14:51:09 CST 2014
	 */
	public int updateByExample(PayInfo record, PayInfoExample example)
			throws SQLException {
		UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
		int rows = sqlMapClient.update(
				"pay_info.abatorgenerated_updateByExample", parms);
		return rows;
	}

	/**
	 * This class was generated by Abator for iBATIS. This class corresponds to the database table pay_info
	 * @abatorgenerated  Thu Apr 17 14:51:09 CST 2014
	 */
	private static class UpdateByExampleParms extends PayInfoExample {
		private Object record;

		public UpdateByExampleParms(Object record, PayInfoExample example) {
			super(example);
			this.record = record;
		}

		public Object getRecord() {
			return record;
		}
	}
}