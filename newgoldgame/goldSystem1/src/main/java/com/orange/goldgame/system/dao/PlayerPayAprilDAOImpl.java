package com.orange.goldgame.system.dao;

import java.sql.SQLException;
import java.util.List;

import com.ibatis.sqlmap.client.SqlMapClient;
import com.orange.goldgame.domain.PlayerPayApril;
import com.orange.goldgame.domain.PlayerPayAprilExample;

public class PlayerPayAprilDAOImpl implements PlayerPayAprilDAO {
    /**
     * This field was generated by Abator for iBATIS.
     * This field corresponds to the database table player_pay_april
     *
     * @abatorgenerated Wed Mar 26 14:13:55 CST 2014
     */
    private SqlMapClient sqlMapClient;

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table player_pay_april
     *
     * @abatorgenerated Wed Mar 26 14:13:55 CST 2014
     */
    public PlayerPayAprilDAOImpl(SqlMapClient sqlMapClient) {
        super();
        this.sqlMapClient = sqlMapClient;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table player_pay_april
     *
     * @abatorgenerated Wed Mar 26 14:13:55 CST 2014
     */
    public Integer insert(PlayerPayApril record) throws SQLException {
        Object newKey = sqlMapClient.insert("player_pay_april.abatorgenerated_insert", record);
        return (Integer) newKey;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table player_pay_april
     *
     * @abatorgenerated Wed Mar 26 14:13:55 CST 2014
     */
    public int updateByPrimaryKey(PlayerPayApril record) throws SQLException {
        int rows = sqlMapClient.update("player_pay_april.abatorgenerated_updateByPrimaryKey", record);
        return rows;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table player_pay_april
     *
     * @abatorgenerated Wed Mar 26 14:13:55 CST 2014
     */
    public int updateByPrimaryKeySelective(PlayerPayApril record) throws SQLException {
        int rows = sqlMapClient.update("player_pay_april.abatorgenerated_updateByPrimaryKeySelective", record);
        return rows;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table player_pay_april
     *
     * @abatorgenerated Wed Mar 26 14:13:55 CST 2014
     */
    @SuppressWarnings("unchecked")
    public List<PlayerPayApril> selectByExample(PlayerPayAprilExample example) throws SQLException {
        List<PlayerPayApril> list = (List<PlayerPayApril>) sqlMapClient.queryForList("player_pay_april.abatorgenerated_selectByExample", example);
        return list;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table player_pay_april
     *
     * @abatorgenerated Wed Mar 26 14:13:55 CST 2014
     */
    public PlayerPayApril selectByPrimaryKey(Integer id) throws SQLException {
        PlayerPayApril key = new PlayerPayApril();
        key.setId(id);
        PlayerPayApril record = (PlayerPayApril) sqlMapClient.queryForObject("player_pay_april.abatorgenerated_selectByPrimaryKey", key);
        return record;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table player_pay_april
     *
     * @abatorgenerated Wed Mar 26 14:13:55 CST 2014
     */
    public int deleteByExample(PlayerPayAprilExample example) throws SQLException {
        int rows = sqlMapClient.delete("player_pay_april.abatorgenerated_deleteByExample", example);
        return rows;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table player_pay_april
     *
     * @abatorgenerated Wed Mar 26 14:13:55 CST 2014
     */
    public int deleteByPrimaryKey(Integer id) throws SQLException {
        PlayerPayApril key = new PlayerPayApril();
        key.setId(id);
        int rows = sqlMapClient.delete("player_pay_april.abatorgenerated_deleteByPrimaryKey", key);
        return rows;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table player_pay_april
     *
     * @abatorgenerated Wed Mar 26 14:13:55 CST 2014
     */
    public int countByExample(PlayerPayAprilExample example) throws SQLException {
        Integer count = (Integer)  sqlMapClient.queryForObject("player_pay_april.abatorgenerated_countByExample", example);
        return count;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table player_pay_april
     *
     * @abatorgenerated Wed Mar 26 14:13:55 CST 2014
     */
    public int updateByExampleSelective(PlayerPayApril record, PlayerPayAprilExample example) throws SQLException {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = sqlMapClient.update("player_pay_april.abatorgenerated_updateByExampleSelective", parms);
        return rows;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table player_pay_april
     *
     * @abatorgenerated Wed Mar 26 14:13:55 CST 2014
     */
    public int updateByExample(PlayerPayApril record, PlayerPayAprilExample example) throws SQLException {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = sqlMapClient.update("player_pay_april.abatorgenerated_updateByExample", parms);
        return rows;
    }

    /**
     * This class was generated by Abator for iBATIS.
     * This class corresponds to the database table player_pay_april
     *
     * @abatorgenerated Wed Mar 26 14:13:55 CST 2014
     */
    private static class UpdateByExampleParms extends PlayerPayAprilExample {
        private Object record;

        public UpdateByExampleParms(Object record, PlayerPayAprilExample example) {
            super(example);
            this.record = record;
        }

        public Object getRecord() {
            return record;
        }
    }
}